import{c7 as p,s,$ as i}from"./index-iOISkVKT.js";import{l as c}from"./MeshVertexAttributes-DDibqs-2.js";import{M as n}from"./vertexSpaceConversion-ADBeg5Bl.js";import"./mat3-DW_nqC5D.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./spatialReferenceEllipsoidUtils-znJ2XXT-.js";import"./computeTranslationToOriginAndRotation-B8YL-54p.js";import"./meshVertexSpaceUtils-CRV6Nmz0.js";import"./MeshLocalVertexSpace-DyVyMk6s.js";import"./vec3-BacNyUJL.js";import"./projection-xqPpwXQL.js";import"./DoubleArray-ZbMc7t6R.js";import"./BufferView-Cf2j_ad4.js";import"./vec2-DH-5MItu.js";import"./vec4-DZOQ3daJ.js";async function j(t,r,m){await Promise.resolve(),p(m);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new c({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{j as convertMeshVertexSpace};
