import{B as t,D as i,ja as le,E as j,F as M,cC as ue,jb as Ve,jc as $t,cA as Ge,cD as _t,hH as O,a$ as F,co as Q,aS as f,d2 as J,s as H,U as he,hL as Ye,aR as qt,V as Dt,a_ as Ot,Q as je,a8 as q,ax as ve,aZ as It,da as re,ay as ae,O as Ct,jd as Vt,es as ce,je as ye,aX as Gt,j8 as zt,dh as Kt,G as Ht,a7 as E,cq as Zt,cu as Yt,cs as Xt,ct as Qt,cv as er,bz as tr,dJ as rr,aY as ir,bD as vt,N as ft,iu as or,I as sr,S as ar,C as nr,f as lr,aU as ur,eG as pr,ce as cr,cf as dr,e2 as yr,cE as mr}from"./index-DPsNinHg.js";import{i as hr}from"./originUtils-D69mHv66.js";import{i as Je,f as jt}from"./utils-hkuPdJiG.js";import{R as vr}from"./normalizeUtils-BBpgT1Z4.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./normalizeUtilsCommon-Lp8NqL_q.js";import"./utils-DBRE-rJC.js";let oe=class extends M{constructor(r){super(r),this.break=new ue({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.first=new ue({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.unlocated=new ue({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.last=new ue({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.middle=new ue({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.waypoint=new ue({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};t([i({types:le})],oe.prototype,"break",void 0),t([i({types:le})],oe.prototype,"first",void 0),t([i({types:le})],oe.prototype,"unlocated",void 0),t([i({types:le})],oe.prototype,"last",void 0),t([i({types:le})],oe.prototype,"middle",void 0),t([i({types:le})],oe.prototype,"waypoint",void 0),oe=t([j("esri.layers.support.RouteStopSymbols")],oe);const Bt=oe;let ee=class extends M{constructor(r){super(r),this.directionLines=new Ge({color:[0,122,194],width:6}),this.directionPoints=new ue({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new ue({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new _t({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new Ge({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new Ge({width:8,color:[20,89,127]}),this.stops=new Bt}};t([i({types:Ve})],ee.prototype,"directionLines",void 0),t([i({types:le})],ee.prototype,"directionPoints",void 0),t([i({types:le})],ee.prototype,"pointBarriers",void 0),t([i({types:$t})],ee.prototype,"polygonBarriers",void 0),t([i({types:Ve})],ee.prototype,"polylineBarriers",void 0),t([i({types:Ve})],ee.prototype,"routeInfo",void 0),t([i({type:Bt})],ee.prototype,"stops",void 0),ee=t([j("esri.layers.support.RouteSymbols")],ee);const Ft=ee,Mt={esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"},Pt=O()(Mt);O()({...Mt,esriIntFeet:"international-feet",esriIntInches:"international-inches",esriIntMiles:"international-miles",esriIntNauticalMiles:"international-nautical-miles",esriIntYards:"international-yards"});O()({esriAcres:"international-acres",esriAcresUS:"us-acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-international-feet",esriSquareFeetUS:"square-us-feet",esriSquareInches:"square-international-inches",esriSquareInchesUS:"square-us-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-international-miles",esriSquareMilesUS:"square-us-miles",esriSquareMillimeters:"square-millimeters",esriSquareYards:"square-international-yards",esriSquareYardsUS:"square-us-yards",esriUnknownAreaUnits:"unknown"});const Lt=O()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"});O()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"});const fr=O()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),br=O()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),Tr=O()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"});O()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"});const Rt=O()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"});O()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"});O()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"});const gr=O()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),k=O()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),we=O()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),pe=O()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),Ee=O()({1:"right",2:"left"},{useNumericKeys:!0}),V=O()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),Ne=O()({0:"permit",1:"restrict"},{useNumericKeys:!0}),xe=O()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),We=O()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),Sr=O()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),wr=O()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),_e=O()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),G=O()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),$e=O()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),Nr=O()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),Ar=O()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),Dr=O()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),Or=O()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"});let Y=class extends M{constructor(r){super(r),this.dataType=null,this.name=null,this.parameterNames=null,this.restrictionUsageParameterName=null,this.timeNeutralAttributeName=null,this.trafficSupport=null,this.units=null,this.usageType=null}};t([i({type:String})],Y.prototype,"dataType",void 0),t([F(G,{ignoreUnknown:!1})],Y.prototype,"name",void 0),t([i({type:[String]})],Y.prototype,"parameterNames",void 0),t([i({type:String})],Y.prototype,"restrictionUsageParameterName",void 0),t([F(_e,{ignoreUnknown:!1})],Y.prototype,"timeNeutralAttributeName",void 0),t([i({type:String})],Y.prototype,"trafficSupport",void 0),t([F(fr)],Y.prototype,"units",void 0),t([F(Dr)],Y.prototype,"usageType",void 0),Y=t([j("esri.rest.support.NetworkAttribute")],Y);const Ir=Y;let ne=class extends M{constructor(r){super(r),this.buildTime=null,this.name=null,this.networkAttributes=null,this.networkSources=null,this.state=null}};t([i({type:Number})],ne.prototype,"buildTime",void 0),t([i({type:String})],ne.prototype,"name",void 0),t([i({type:[Ir]})],ne.prototype,"networkAttributes",void 0),t([i()],ne.prototype,"networkSources",void 0),t([i({type:String})],ne.prototype,"state",void 0),ne=t([j("esri.rest.support.NetworkDataset")],ne);const Cr=ne;let R=class extends Q(M){constructor(r){super(r),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(r,o){return o.id??o.itemId??null}readRestrictionAttributes(r,o){const{restrictionAttributeNames:s}=o;return s==null?null:s.map(a=>$e.fromJSON(a))}writeRestrictionAttributes(r,o,s){r!=null&&(o[s]=r.map(a=>$e.toJSON(a)))}};t([i({type:[Object],json:{write:!0}})],R.prototype,"attributeParameterValues",void 0),t([i({type:String,json:{write:!0}})],R.prototype,"description",void 0),t([F(wr,{ignoreUnknown:!1})],R.prototype,"distanceAttributeName",void 0),t([i({type:String,json:{write:!0}})],R.prototype,"id",void 0),t([f("id",["id","itemId"])],R.prototype,"readId",null),t([F(G,{ignoreUnknown:!1})],R.prototype,"impedanceAttributeName",void 0),t([i({type:String,json:{write:!0}})],R.prototype,"name",void 0),t([i({type:[String],json:{write:!0}})],R.prototype,"restrictionAttributeNames",void 0),t([f("restrictionAttributeNames")],R.prototype,"readRestrictionAttributes",null),t([J("restrictionAttributeNames")],R.prototype,"writeRestrictionAttributes",null),t([i({type:Number,json:{write:{allowNull:!0}}})],R.prototype,"simplificationTolerance",void 0),t([F(Pt)],R.prototype,"simplificationToleranceUnits",void 0),t([F(_e,{ignoreUnknown:!1})],R.prototype,"timeAttributeName",void 0),t([F(gr)],R.prototype,"type",void 0),t([i({type:Boolean,json:{write:!0}})],R.prototype,"useHierarchy",void 0),t([F(Rt)],R.prototype,"uturnAtJunctions",void 0),R=t([j("esri.rest.support.TravelMode")],R);const qe=R;let U=class extends M{constructor(r){super(r),this.accumulateAttributeNames=null,this.attributeParameterValues=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(r){return r==null?null:r.map(o=>G.fromJSON(o))}writeAccumulateAttributes(r,o,s){r!=null&&r.length&&(o[s]=r.map(a=>G.toJSON(a)))}get capabilities(){return{supportsNow:(this.currentVersion??10)>=10.81}}readDefaultTravelMode(r,o){var a,u;const s=((a=o.supportedTravelModes)==null?void 0:a.find(({id:l})=>l===o.defaultTravelMode))??((u=o.supportedTravelModes)==null?void 0:u.find(({itemId:l})=>l===o.defaultTravelMode));return s?qe.fromJSON(s):null}};t([i()],U.prototype,"accumulateAttributeNames",void 0),t([f("accumulateAttributeNames")],U.prototype,"readAccumulateAttributes",null),t([J("accumulateAttributeNames")],U.prototype,"writeAccumulateAttributes",null),t([i()],U.prototype,"attributeParameterValues",void 0),t([i()],U.prototype,"capabilities",null),t([i()],U.prototype,"currentVersion",void 0),t([i()],U.prototype,"defaultTravelMode",void 0),t([f("defaultTravelMode",["defaultTravelMode","supportedTravelModes"])],U.prototype,"readDefaultTravelMode",null),t([i()],U.prototype,"directionsLanguage",void 0),t([F(Lt)],U.prototype,"directionsLengthUnits",void 0),t([i()],U.prototype,"directionsSupportedLanguages",void 0),t([F(_e,{ignoreUnknown:!1})],U.prototype,"directionsTimeAttribute",void 0),t([i()],U.prototype,"hasZ",void 0),t([F(G,{ignoreUnknown:!1})],U.prototype,"impedance",void 0),t([i({type:Cr})],U.prototype,"networkDataset",void 0),t([i({type:[qe]})],U.prototype,"supportedTravelModes",void 0),U=t([j("esri.rest.support.NetworkServiceDescription")],U);const jr=U,Br=()=>Dt.getLogger("esri.rest.networkService");function Be(e,r,o,s){s[o]=[r.length,r.length+e.length],e.forEach(a=>{r.push(a.geometry)})}function Fr(e,r){for(let o=0;o<r.length;o++){const s=e[r[o]];if(s&&s.length)for(const a of s)a.z=void 0}Br().warnOnce(`The remote Network Analysis service is powered by a network dataset which is not Z-aware.
Z-coordinates of the input geometry are ignored.`)}function Mr(e,r){for(let o=0;o<r.length;o++){const s=e[r[o]];if(s&&s.length){for(const a of s)if(a!=null&&a.hasZ)return!0}}return!1}async function Ut(e,r,o){if(!e)throw new H("network-service:missing-url","Url to Network service is missing");const s=Je({f:"json",token:r},o),{data:a}=await he(e,s),u=a.currentVersion>=10.4?Lr(e,r,o):Pr(e,o),{defaultTravelMode:l,supportedTravelModes:c}=await u;return a.defaultTravelMode=l,a.supportedTravelModes=c,jr.fromJSON(a)}async function Pr(e,r){var g,v,n;const o=Je({f:"json"},r),{data:s}=await he(e.replace(/\/rest\/.*$/i,"/info"),o);if(!(s!=null&&s.owningSystemUrl))return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:a}=s,u=Ye(a)+"/sharing/rest/portals/self",{data:l}=await he(u,o),c=qt("helperServices.routingUtilities.url",l);if(!c)return{supportedTravelModes:[],defaultTravelMode:null};const T=jt(a),w=/\/solve$/i.test(T.path)?"Route":/\/solveclosestfacility$/i.test(T.path)?"ClosestFacility":"ServiceAreas",p=Je({f:"json",serviceName:w},r),D=Ye(c)+"/GetTravelModes/execute",I=await he(D,p),C=[];let b=null;if((v=(g=I==null?void 0:I.data)==null?void 0:g.results)!=null&&v.length){const A=I.data.results;for(const h of A)if(h.paramName==="supportedTravelModes"){if((n=h.value)!=null&&n.features){for(const{attributes:P}of h.value.features)if(P){const Z=JSON.parse(P.TravelMode);C.push(Z)}}}else h.paramName==="defaultTravelMode"&&(b=h.value)}return{supportedTravelModes:C,defaultTravelMode:b}}async function Lr(e,r,o){try{const s=Je({f:"json",token:r},o),a=Ye(e)+"/retrieveTravelModes",{data:{supportedTravelModes:u,defaultTravelMode:l}}=await he(a,s);return{supportedTravelModes:u,defaultTravelMode:l}}catch(s){throw new H("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:s})}}function ie(e,r){if(e==null)return null;const o={},s=new RegExp(`^${r}`,"i");for(const a of Object.keys(e))if(s.test(a)){const u=a.substring(r.length);o[G.fromJSON(u)]=e[a]}return o}function lt(e,r,o){if(e!=null){r.attributes||(r.attributes={});for(const s in e){const a=G.toJSON(s);r.attributes[`${o}${a}`]=e[s]}}}function fe(e){const r={};for(const o of Object.keys(e)){const s=o;r[G.fromJSON(s)]=e[o]}return r}function be(e){const r={};for(const o of Object.keys(e)){const s=o;r[G.toJSON(s)]=e[o]}return r}function Ce(e,r){return e==null||r==null?null:Math.round((e-r)/6e4)}function Rr(e){var s,a,u;const r=e.toJSON(),o=r;return o.accumulateAttributeNames&&(o.accumulateAttributeNames=(s=r.accumulateAttributeNames)==null?void 0:s.join()),o.attributeParameterValues&&(o.attributeParameterValues=JSON.stringify(r.attributeParameterValues)),o.barriers&&(o.barriers=JSON.stringify(r.barriers)),o.outSR&&(o.outSR=(a=r.outSR)==null?void 0:a.wkid),o.overrides&&(o.overrides=JSON.stringify(r.overrides)),o.polygonBarriers&&(o.polygonBarriers=JSON.stringify(r.polygonBarriers)),o.polylineBarriers&&(o.polylineBarriers=JSON.stringify(r.polylineBarriers)),o.restrictionAttributeNames&&(o.restrictionAttributeNames=(u=r.restrictionAttributeNames)==null?void 0:u.join()),o.stops&&(o.stops=JSON.stringify(r.stops)),o.travelMode&&(o.travelMode=JSON.stringify(r.travelMode)),o}const bt=new Ot({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let Te=class extends M{constructor(r){super(r),this.description=null,this.type=null}};t([i({type:String,json:{write:!0}})],Te.prototype,"description",void 0),t([i({type:String,json:{read:bt.read,write:bt.write}})],Te.prototype,"type",void 0),Te=t([j("esri.rest.support.GPMessage")],Te);const Ur=Te,Tt=new Ot({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let Le=class extends Ur{constructor(r){super(r),this.type=null}};t([i({type:String,json:{read:Tt.read,write:Tt.write}})],Le.prototype,"type",void 0),Le=t([j("esri.rest.support.NAMessage")],Le);const kr=Le;let ge=class extends M{constructor(r){super(r)}};t([i({json:{read:{source:"string"}}})],ge.prototype,"text",void 0),t([F(Or,{name:"stringType"})],ge.prototype,"type",void 0),ge=t([j("esri.rest.support.DirectionsString")],ge);const kt=ge;let se=class extends M{constructor(r){super(r),this.arriveTime=null,this.arriveTimeOffset=null,this.geometry=null,this.strings=null}readArriveTimeOffset(r,o){return Ce(o.ETA,o.arriveTimeUTC)}readGeometry(r,o){return je.fromJSON(o.point)}};t([i({type:Date,json:{read:{source:"arriveTimeUTC"}}})],se.prototype,"arriveTime",void 0),t([i()],se.prototype,"arriveTimeOffset",void 0),t([f("arriveTimeOffset",["arriveTimeUTC","ETA"])],se.prototype,"readArriveTimeOffset",null),t([i({type:je})],se.prototype,"geometry",void 0),t([f("geometry",["point"])],se.prototype,"readGeometry",null),t([i({type:[kt]})],se.prototype,"strings",void 0),se=t([j("esri.rest.support.DirectionsEvent")],se);const Jr=se;function Er(e){if(e==null||e==="")return null;let r=0,o=0,s=0,a=0;const u=[];let l,c,T,w,p,D,I,C,b=0,g=0,v=0;if(p=e.match(/((\+|-)[^+\-|]+|\|)/g),p||(p=[]),parseInt(p[b],32)===0){b=2;const n=parseInt(p[b],32);b++,D=parseInt(p[b],32),b++,1&n&&(g=p.indexOf("|")+1,I=parseInt(p[g],32),g++),2&n&&(v=p.indexOf("|",g)+1,C=parseInt(p[v],32),v++)}else D=parseInt(p[b],32),b++;for(;b<p.length&&p[b]!=="|";){l=parseInt(p[b],32)+r,b++,r=l,c=parseInt(p[b],32)+o,b++,o=c;const n=[l/D,c/D];g&&(w=parseInt(p[g],32)+s,g++,s=w,n.push(w/I)),v&&(T=parseInt(p[v],32)+a,v++,a=T,n.push(T/C)),u.push(n)}return{paths:[u],hasZ:g>0,hasM:v>0}}let me=class extends q{constructor(r){super(r),this.events=null,this.strings=null}readGeometry(r,o){const s=Er(o.compressedGeometry);return s!=null?ve.fromJSON(s):null}};t([i({type:[Jr]})],me.prototype,"events",void 0),t([f("geometry",["compressedGeometry"])],me.prototype,"readGeometry",null),t([i({type:[kt]})],me.prototype,"strings",void 0),me=t([j("esri.rest.support.DirectionsFeature")],me);const xr=me;function Wr(e,r){if(e.length===0)return new ve({spatialReference:r});const o=[];for(const l of e)for(const c of l.paths)o.push(...c);const s=[];o.forEach((l,c)=>{c!==0&&l[0]===o[c-1][0]&&l[1]===o[c-1][1]||s.push(l)});const{hasM:a,hasZ:u}=e[0];return new ve({hasM:a,hasZ:u,paths:[s],spatialReference:r})}let $=class extends re{constructor(r){super(r),this.extent=null,this.features=[],this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(r,o){if(!r)return[];const s=o.summary.envelope.spatialReference??o.spatialReference,a=s&&ae.fromJSON(s);return r.map(u=>{const l=xr.fromJSON(u);if(l.geometry!=null&&(l.geometry.spatialReference=a),l.events!=null)for(const c of l.events)c.geometry!=null&&(c.geometry.spatialReference=a);return l})}get mergedGeometry(){return this.features?Wr(this.features.map(({geometry:r})=>r),this.extent.spatialReference):null}get strings(){return this.features.flatMap(({strings:r})=>r).filter(Ct)}};t([i({type:It,json:{read:{source:"summary.envelope"}}})],$.prototype,"extent",void 0),t([i({nonNullable:!0})],$.prototype,"features",void 0),t([f("features")],$.prototype,"readFeatures",null),t([i()],$.prototype,"geometryType",void 0),t([i({readOnly:!0})],$.prototype,"mergedGeometry",null),t([i()],$.prototype,"routeId",void 0),t([i()],$.prototype,"routeName",void 0),t([i({value:null,readOnly:!0})],$.prototype,"strings",null),t([i({json:{read:{source:"summary.totalDriveTime"}}})],$.prototype,"totalDriveTime",void 0),t([i({json:{read:{source:"summary.totalLength"}}})],$.prototype,"totalLength",void 0),t([i({json:{read:{source:"summary.totalTime"}}})],$.prototype,"totalTime",void 0),$=t([j("esri.rest.support.DirectionsFeatureSet")],$);const $r=$;let K=class extends M{constructor(e){super(e),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null,this.traversedEdges=null,this.traversedJunctions=null,this.traversedTurns=null}};t([i({type:re,json:{write:!0}})],K.prototype,"directionLines",void 0),t([i({type:re,json:{write:!0}})],K.prototype,"directionPoints",void 0),t([i({type:$r,json:{write:!0}})],K.prototype,"directions",void 0),t([i({type:q,json:{write:!0}})],K.prototype,"route",void 0),t([i({type:String,json:{write:!0}})],K.prototype,"routeName",void 0),t([i({type:[q],json:{write:!0}})],K.prototype,"stops",void 0),t([i({type:re,json:{write:!0}})],K.prototype,"traversedEdges",void 0),t([i({type:re,json:{write:!0}})],K.prototype,"traversedJunctions",void 0),t([i({type:re,json:{write:!0}})],K.prototype,"traversedTurns",void 0),K=t([j("esri.rest.support.RouteResult")],K);const _r=K;function ze(e){return e?re.fromJSON(e).features.filter(Ct):[]}let X=class extends M{constructor(r){super(r),this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(r,o){return ze(o.barriers)}readPolylineBarriers(r){return ze(r)}readPolygonBarriers(r){return ze(r)}};t([i({type:[kr]})],X.prototype,"messages",void 0),t([i({type:[q]})],X.prototype,"pointBarriers",void 0),t([f("pointBarriers",["barriers"])],X.prototype,"readPointBarriers",null),t([i({type:[q]})],X.prototype,"polylineBarriers",void 0),t([f("polylineBarriers")],X.prototype,"readPolylineBarriers",null),t([i({type:[q]})],X.prototype,"polygonBarriers",void 0),t([f("polygonBarriers")],X.prototype,"readPolygonBarriers",null),t([i({type:[_r]})],X.prototype,"routeResults",void 0),X=t([j("esri.rest.support.RouteSolveResult")],X);const qr=X;function Fe(e){return e instanceof re}async function Vr(e,r,o){const s=[],a=[],u={},l={},c=jt(e),{path:T}=c;Fe(r.stops)&&Be(r.stops.features,a,"stops.features",u),Fe(r.pointBarriers)&&Be(r.pointBarriers.features,a,"pointBarriers.features",u),Fe(r.polylineBarriers)&&Be(r.polylineBarriers.features,a,"polylineBarriers.features",u),Fe(r.polygonBarriers)&&Be(r.polygonBarriers.features,a,"polygonBarriers.features",u);const w=await vr(a);for(const C in u){const b=u[C];s.push(C),l[C]=w.slice(b[0],b[1])}if(Mr(l,s)){let C=null;try{C=await Ut(T,r.apiKey,o)}catch{}C&&!C.hasZ&&Fr(l,s)}for(const C in l)l[C].forEach((b,g)=>{Vt(r,C)[g].geometry=b});const p={...o,query:{...c.query,...Rr(r),f:"json"}},D=T.endsWith("/solve")?T:`${T}/solve`,{data:I}=await he(D,p);return Gr(I)}function Gr(e){const{barriers:r,directionLines:o,directionPoints:s,directions:a,messages:u,polygonBarriers:l,polylineBarriers:c,routes:T,stops:w,traversedEdges:p,traversedJunctions:D,traversedTurns:I}=e,C=n=>{const A=g.find(P=>P.routeName===n);if(A!=null)return A;const h={routeId:g.length+1,routeName:n};return g.push(h),h},b=n=>{const A=g.find(P=>P.routeId===n);if(A!=null)return A;const h={routeId:n,routeName:null};return g.push(h),h},g=[];T==null||T.features.forEach((n,A)=>{n.geometry.spatialReference=T.spatialReference??void 0;const h=n.attributes.Name,P=A+1;g.push({routeId:P,routeName:h,route:n})}),a==null||a.forEach(n=>{const{routeName:A}=n;C(A).directions=n});const v=((w==null?void 0:w.features.every(n=>n.attributes.RouteName==null))??!1)&&g.length>0?g[0].routeName:null;return w==null||w.features.forEach(n=>{var P;n.geometry&&((P=n.geometry).spatialReference??(P.spatialReference=w.spatialReference??void 0));const A=v??n.attributes.RouteName,h=C(A);h.stops??(h.stops=[]),h.stops.push(n)}),o==null||o.features.forEach(n=>{const A=n.attributes.RouteID,h=b(A),{geometryType:P,spatialReference:Z}=o;h.directionLines??(h.directionLines={features:[],geometryType:P,spatialReference:Z}),h.directionLines.features.push(n)}),s==null||s.features.forEach(n=>{const A=n.attributes.RouteID,h=b(A),{geometryType:P,spatialReference:Z}=s;h.directionPoints??(h.directionPoints={features:[],geometryType:P,spatialReference:Z}),h.directionPoints.features.push(n)}),p==null||p.features.forEach(n=>{const A=n.attributes.RouteID,h=b(A),{geometryType:P,spatialReference:Z}=p;h.traversedEdges??(h.traversedEdges={features:[],geometryType:P,spatialReference:Z}),h.traversedEdges.features.push(n)}),D==null||D.features.forEach(n=>{const A=n.attributes.RouteID,h=b(A),{geometryType:P,spatialReference:Z}=D;h.traversedJunctions??(h.traversedJunctions={features:[],geometryType:P,spatialReference:Z}),h.traversedJunctions.features.push(n)}),I==null||I.features.forEach(n=>{const A=n.attributes.RouteID,h=b(A);h.traversedTurns??(h.traversedTurns={features:[]}),h.traversedTurns.features.push(n)}),qr.fromJSON({routeResults:g,barriers:r,polygonBarriers:l,polylineBarriers:c,messages:u})}var Xe;let x=Xe=class extends Q(M){constructor(e){super(e),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line"}static fromGraphic(e){return new Xe({directionLineType:We.fromJSON(e.attributes.DirectionLineType),directionPointId:e.attributes.DirectionPointID,distance:e.attributes.Meters,duration:e.attributes.Minutes,fromLevel:e.attributes.FromLevel??null,geometry:e.geometry,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,symbol:e.symbol,toLevel:e.attributes.ToLevel??null})}toGraphic(){const e={ObjectID:this.objectId,DirectionLineType:this.directionLineType!=null?We.toJSON(this.directionLineType):null,DirectionPointID:this.directionPointId,Meters:this.distance,Minutes:this.duration};return this.fromLevel!=null&&(e.FromLevel=this.fromLevel),this.toLevel!=null&&(e.ToLevel=this.toLevel),new q({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};x.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger"},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger"},{name:"FromLevel",alias:"From Level",type:"esriFieldTypeInteger"},{name:"Meters",alias:"Meters",type:"esriFieldTypeDouble"},{name:"Minutes",alias:"Minutes",type:"esriFieldTypeDouble"},{name:"ToLevel",alias:"To Level",type:"esriFieldTypeInteger"}],t([i({type:We.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:We.read}}})],x.prototype,"directionLineType",void 0),t([i({json:{read:{source:"attributes.DirectionPointID"}}})],x.prototype,"directionPointId",void 0),t([i({json:{read:{source:"attributes.Meters"}}})],x.prototype,"distance",void 0),t([i({json:{read:{source:"attributes.Minutes"}}})],x.prototype,"duration",void 0),t([i({json:{read:{source:"attributes.FromLevel"}}})],x.prototype,"fromLevel",void 0),t([i({type:ve})],x.prototype,"geometry",void 0),t([i({json:{read:{source:"attributes.ObjectID"}}})],x.prototype,"objectId",void 0),t([i({type:ce})],x.prototype,"popupTemplate",void 0),t([i({types:ye})],x.prototype,"symbol",void 0),t([i({json:{read:{source:"attributes.ToLevel"}}})],x.prototype,"toLevel",void 0),t([i({readOnly:!0,json:{read:!1}})],x.prototype,"type",void 0),x=Xe=t([j("esri.rest.support.DirectionLine")],x);const Re=x;var Qe;let B=Qe=class extends Q(M){constructor(e){super(e),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null}readArrivalTime(e,r){return r.attributes.ArrivalTime!=null?new Date(r.attributes.ArrivalTime):null}static fromGraphic(e){return new Qe({alternateName:e.attributes.AlternateName??null,arrivalTime:e.attributes.ArrivalTime!=null?new Date(e.attributes.ArrivalTime):null,arrivalTimeOffset:e.attributes.ArrivalUTCOffset??null,azimuth:e.attributes.Azimuth??null,branchName:e.attributes.BranchName??null,directionPointType:xe.fromJSON(e.attributes.DirectionPointType),displayText:e.attributes.DisplayText??null,exitName:e.attributes.ExitName??null,geometry:e.geometry,intersectingName:e.attributes.IntersectingName??null,level:e.attributes.Level??null,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,sequence:e.attributes.Sequence,shortVoiceInstruction:e.attributes.ShortVoiceInstruction??null,stopId:e.attributes.StopID??null,symbol:e.symbol,towardName:e.attributes.TowardName??null,voiceInstruction:e.attributes.VoiceInstruction??null})}toGraphic(){const e={ObjectID:this.objectId,DirectionPointType:this.directionPointType!=null?xe.toJSON(this.directionPointType):null,Sequence:this.sequence,StopID:this.stopId};return this.alternateName!=null&&(e.AlternateName=this.alternateName),this.arrivalTime!=null&&(e.ArrivalTime=this.arrivalTime.getTime()),this.arrivalTimeOffset!=null&&(e.ArrivalUTCOffset=this.arrivalTimeOffset),this.azimuth!=null&&(e.Azimuth=this.azimuth),this.branchName!=null&&(e.BranchName=this.branchName),this.displayText!=null&&(e.DisplayText=this.displayText),this.exitName!=null&&(e.ExitName=this.exitName),this.intersectingName!=null&&(e.IntersectingName=this.intersectingName),this.level!=null&&(e.Level=this.level),this.name!=null&&(e.Name=this.name),this.shortVoiceInstruction!=null&&(e.ShortVoiceInstruction=this.shortVoiceInstruction),this.towardName!=null&&(e.TowardName=this.towardName),this.voiceInstruction!=null&&(e.VoiceInstruction=this.voiceInstruction),new q({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};B.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AlternateName",alias:"Alternative Name",type:"esriFieldTypeString"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time Offset",type:"esriFieldTypeInteger"},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble"},{name:"BranchName",alias:"Branch Name",type:"esriFieldTypeString"},{name:"DirectionPointType",alias:"Directions Point Type",type:"esriFieldTypeInteger"},{name:"DisplayText",alias:"Display Text",type:"esriFieldTypeString"},{name:"ExitName",alias:"Exit Name",type:"esriFieldTypeString"},{name:"IntersectingName",alias:"Intersecting Name",type:"esriFieldTypeString"},{name:"Level",alias:"Level",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ShortVoiceInstruction",alias:"Short Voice Instruction",type:"esriFieldTypeString"},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger"},{name:"TowardName",alias:"Toward Name",type:"esriFieldTypeString"},{name:"VoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString"}],t([i({json:{read:{source:"attributes.AlternateName"}}})],B.prototype,"alternateName",void 0),t([i()],B.prototype,"arrivalTime",void 0),t([f("arrivalTime",["attributes.ArrivalTime"])],B.prototype,"readArrivalTime",null),t([i({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],B.prototype,"arrivalTimeOffset",void 0),t([i({json:{read:{source:"attributes.Azimuth"}}})],B.prototype,"azimuth",void 0),t([i({json:{read:{source:"attributes.BranchName"}}})],B.prototype,"branchName",void 0),t([i({type:xe.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:xe.read}}})],B.prototype,"directionPointType",void 0),t([i({json:{read:{source:"attributes.DisplayText"}}})],B.prototype,"displayText",void 0),t([i({json:{read:{source:"attributes.ExitName"}}})],B.prototype,"exitName",void 0),t([i({type:je})],B.prototype,"geometry",void 0),t([i({json:{read:{source:"attributes.IntersectingName"}}})],B.prototype,"intersectingName",void 0),t([i()],B.prototype,"level",void 0),t([i({json:{read:{source:"attributes.Name"}}})],B.prototype,"name",void 0),t([i({json:{read:{source:"attributes.ObjectID"}}})],B.prototype,"objectId",void 0),t([i({type:ce})],B.prototype,"popupTemplate",void 0),t([i({json:{read:{source:"attributes.Sequence"}}})],B.prototype,"sequence",void 0),t([i({json:{read:{source:"attributes.ShortVoiceInstruction"}}})],B.prototype,"shortVoiceInstruction",void 0),t([i({json:{read:{source:"attributes.StopID"}}})],B.prototype,"stopId",void 0),t([i({types:ye})],B.prototype,"symbol",void 0),t([i({json:{read:{source:"attributes.TowardName"}}})],B.prototype,"towardName",void 0),t([i({readOnly:!0,json:{read:!1}})],B.prototype,"type",void 0),t([i({json:{read:{source:"attributes.VoiceInstruction"}}})],B.prototype,"voiceInstruction",void 0),B=Qe=t([j("esri.rest.support.DirectionPoint")],B);const Ue=B;var et;let L=et=class extends Q(M){constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(e,r){return ie(r.attributes,"Attr_")}writeCosts(e,r){lt(e,r,"Attr_")}static fromGraphic(e){return new et({addedCost:e.attributes.AddedCost??null,barrierType:e.attributes.BarrierType!=null?V.fromJSON(e.attributes.BarrierType):null,costs:e.attributes.Costs!=null?fe(JSON.parse(e.attributes.Costs)):null,curbApproach:e.attributes.CurbApproach!=null?k.fromJSON(e.attributes.CurbApproach):null,fullEdge:e.attributes.FullEdge!=null?Ne.fromJSON(e.attributes.FullEdge):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,status:e.attributes.Status!=null?pe.fromJSON(e.attributes.Status):null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:this.barrierType!=null?V.toJSON(this.barrierType):null,Costs:this.costs!=null?JSON.stringify(be(this.costs)):null,CurbApproach:this.curbApproach!=null?k.toJSON(this.curbApproach):null,FullEdge:this.fullEdge!=null?Ne.toJSON(this.fullEdge):null,Name:this.name,Status:this.status!=null?pe.toJSON(this.status):null};return new q({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};L.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"}],t([i()],L.prototype,"addedCost",void 0),t([i({type:V.apiValues,json:{name:"attributes.BarrierType",read:{reader:V.read},write:{writer:V.write}}})],L.prototype,"barrierType",void 0),t([i()],L.prototype,"costs",void 0),t([f("costs",["attributes"])],L.prototype,"readCosts",null),t([J("costs")],L.prototype,"writeCosts",null),t([i({constructOnly:!0,type:k.apiValues,json:{read:{source:"attributes.CurbApproach",reader:k.read}}})],L.prototype,"curbApproach",void 0),t([i({type:Ne.apiValues,json:{name:"attributes.FullEdge",read:{reader:Ne.read},write:{writer:Ne.write}}})],L.prototype,"fullEdge",void 0),t([i({type:je,json:{write:!0}})],L.prototype,"geometry",void 0),t([i({json:{name:"attributes.Name"}})],L.prototype,"name",void 0),t([i({json:{name:"attributes.ObjectID"}})],L.prototype,"objectId",void 0),t([i({type:ce})],L.prototype,"popupTemplate",void 0),t([i({type:Ee.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:Ee.read}}})],L.prototype,"sideOfEdge",void 0),t([i({json:{read:{source:"attributes.SourceID"}}})],L.prototype,"sourceId",void 0),t([i({json:{read:{source:"attributes.SourceOID"}}})],L.prototype,"sourceOid",void 0),t([i({type:pe.apiValues,json:{read:{source:"attributes.Status",reader:pe.read}}})],L.prototype,"status",void 0),t([i({types:ye})],L.prototype,"symbol",void 0),t([i({readOnly:!0,json:{read:!1}})],L.prototype,"type",void 0),L=et=t([j("esri.rest.support.PointBarrier")],L);const Ae=L;var tt;let W=tt=class extends Q(M){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(e,r){return ie(r.attributes,"Attr_")}writeCosts(e,r){lt(e,r,"Attr_")}static fromGraphic(e){return new tt({barrierType:e.attributes.BarrierType!=null?V.fromJSON(e.attributes.BarrierType):null,costs:e.attributes.Costs!=null?fe(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,BarrierType:this.barrierType!=null?V.toJSON(this.barrierType):null,Costs:this.costs!=null?JSON.stringify(be(this.costs)):null,Name:this.name??null,ScaleFactor:this.scaleFactor??null};return new q({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};W.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}],t([i({type:V.apiValues,json:{name:"attributes.BarrierType",read:{reader:V.read},write:{writer:V.write}}})],W.prototype,"barrierType",void 0),t([i()],W.prototype,"costs",void 0),t([f("costs",["attributes"])],W.prototype,"readCosts",null),t([J("costs")],W.prototype,"writeCosts",null),t([i({type:Gt,json:{write:!0}})],W.prototype,"geometry",void 0),t([i({json:{name:"attributes.Name"}})],W.prototype,"name",void 0),t([i({json:{name:"attributes.ObjectID"}})],W.prototype,"objectId",void 0),t([i({type:ce})],W.prototype,"popupTemplate",void 0),t([i()],W.prototype,"scaleFactor",void 0),t([i({types:ye})],W.prototype,"symbol",void 0),t([i({readOnly:!0,json:{read:!1}})],W.prototype,"type",void 0),W=tt=t([j("esri.rest.support.PolygonBarrier")],W);const De=W;var rt;let _=rt=class extends Q(M){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier"}readCosts(e,r){return ie(r.attributes,"Attr_")}static fromGraphic(e){return new rt({barrierType:e.attributes.BarrierType!=null?V.fromJSON(e.attributes.BarrierType):null,costs:e.attributes.Costs!=null?fe(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,BarrierType:this.barrierType!=null?V.toJSON(this.barrierType):null,Costs:this.costs!=null?JSON.stringify(be(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new q({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};_.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}],t([i({type:V.apiValues,json:{read:{source:"attributes.BarrierType",reader:V.read}}})],_.prototype,"barrierType",void 0),t([i()],_.prototype,"costs",void 0),t([f("costs",["attributes"])],_.prototype,"readCosts",null),t([i({type:ve,json:{write:!0}})],_.prototype,"geometry",void 0),t([i({json:{name:"attributes.Name"}})],_.prototype,"name",void 0),t([i({json:{name:"attributes.ObjectID"}})],_.prototype,"objectId",void 0),t([i({type:ce})],_.prototype,"popupTemplate",void 0),t([i()],_.prototype,"scaleFactor",void 0),t([i({types:ye})],_.prototype,"symbol",void 0),t([i({readOnly:!0,json:{read:!1}})],_.prototype,"type",void 0),_=rt=t([j("esri.rest.support.PolylineBarrier")],_);const Oe=_;let z=class extends M{constructor(e){super(e),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(e){return e==null?null:e.map(r=>G.fromJSON(r))}writeAccumulateAttributes(e,r,o){e!=null&&e.length&&(r[o]=e.map(s=>G.toJSON(s)))}};t([i({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],z.prototype,"accumulateAttributes",void 0),t([f("accumulateAttributes")],z.prototype,"readAccumulateAttributes",null),t([J("accumulateAttributes")],z.prototype,"writeAccumulateAttributes",null),t([i({type:String,json:{write:!0}})],z.prototype,"directionsLanguage",void 0),t([i({type:Boolean,json:{write:!0}})],z.prototype,"findBestSequence",void 0),t([i({type:Boolean,json:{write:!0}})],z.prototype,"preserveFirstStop",void 0),t([i({type:Boolean,json:{write:!0}})],z.prototype,"preserveLastStop",void 0),t([i({type:Boolean,json:{write:!0}})],z.prototype,"startTimeIsUTC",void 0),t([i({type:Boolean,json:{write:!0}})],z.prototype,"timeWindowsAreUTC",void 0),t([i({type:qe,json:{write:!0}})],z.prototype,"travelMode",void 0),z=t([j("esri.rest.support.RouteSettings")],z);const Jt=z;var it;let N=it=class extends Q(M){constructor(e){super(e),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(e,r){return r.attributes.EndTimeUTC!=null?new Date(r.attributes.EndTimeUTC):null}readEndTimeOffset(e,r){return Ce(r.attributes.EndTime,r.attributes.EndTimeUTC)}readStartTime(e,r){return r.attributes.StartTimeUTC!=null?new Date(r.attributes.StartTimeUTC):null}readStartTimeOffset(e,r){return Ce(r.attributes.StartTime,r.attributes.StartTimeUTC)}readTotalCosts(e,r){return ie(r.attributes,"Total_")}readTotalViolations(e,r){return ie(r.attributes,"TotalViolation_")}readTotalWait(e,r){return ie(r.attributes,"TotalWait_")}static fromGraphic(e){return new it({analysisSettings:e.attributes.AnalysisSettings!=null?Jt.fromJSON(JSON.parse(e.attributes.AnalysisSettings)):null,endTime:e.attributes.EndTime!=null?new Date(e.attributes.EndTime):null,endTimeOffset:e.attributes.EndUTCOffset??null,geometry:e.geometry,messages:e.attributes.Messages!=null?JSON.parse(e.attributes.Messages):null,name:e.attributes.RouteName,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,startTime:e.attributes.StartTime!=null?new Date(e.attributes.StartTime):null,startTimeOffset:e.attributes.StartUTCOffset??null,symbol:e.symbol,totalCosts:e.attributes.TotalCosts!=null?fe(JSON.parse(e.attributes.TotalCosts)):null,totalDistance:e.attributes.TotalMeters??null,totalDuration:e.attributes.TotalMinutes??null,totalLateDuration:e.attributes.TotalLateMinutes??null,totalWaitDuration:e.attributes.TotalWaitMinutes??null,version:e.attributes.Version})}toGraphic(){const e={ObjectID:this.objectId,AnalysisSettings:this.analysisSettings!=null?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:this.endTime!=null?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:this.messages!=null?JSON.stringify(this.messages):null,RouteName:this.name,StartTime:this.startTime!=null?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:this.totalCosts!=null?JSON.stringify(be(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:this.version};return new q({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};N.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString"},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate"},{name:"EndUTCOffset",alias:"End Time Offset",type:"esriFieldTypeInteger"},{name:"Messages",alias:"Messages",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate"},{name:"StartUTCOffset",alias:"Start Time Offset",type:"esriFieldTypeInteger"},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString"},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble"},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble"},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble"},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble"},{name:"Version",alias:"Version",type:"esriFieldTypeString"}],t([i()],N.prototype,"analysisSettings",void 0),t([i()],N.prototype,"endTime",void 0),t([f("endTime",["attributes.EndTimeUTC"])],N.prototype,"readEndTime",null),t([i()],N.prototype,"endTimeOffset",void 0),t([f("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],N.prototype,"readEndTimeOffset",null),t([i({json:{read:{source:"attributes.FirstStopID"}}})],N.prototype,"firstStopId",void 0),t([i({type:ve})],N.prototype,"geometry",void 0),t([i({json:{read:{source:"attributes.LastStopID"}}})],N.prototype,"lastStopId",void 0),t([i()],N.prototype,"messages",void 0),t([i({json:{read:{source:"attributes.Name"}}})],N.prototype,"name",void 0),t([i({json:{read:{source:"attributes.ObjectID"}}})],N.prototype,"objectId",void 0),t([i({type:ce})],N.prototype,"popupTemplate",void 0),t([i()],N.prototype,"startTime",void 0),t([f("startTime",["attributes.StartTimeUTC"])],N.prototype,"readStartTime",null),t([i()],N.prototype,"startTimeOffset",void 0),t([f("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],N.prototype,"readStartTimeOffset",null),t([i({json:{read:{source:"attributes.StopCount"}}})],N.prototype,"stopCount",void 0),t([i({types:ye})],N.prototype,"symbol",void 0),t([i()],N.prototype,"totalCosts",void 0),t([f("totalCosts",["attributes"])],N.prototype,"readTotalCosts",null),t([i()],N.prototype,"totalDistance",void 0),t([i()],N.prototype,"totalDuration",void 0),t([i()],N.prototype,"totalLateDuration",void 0),t([i()],N.prototype,"totalViolations",void 0),t([f("totalViolations",["attributes"])],N.prototype,"readTotalViolations",null),t([i()],N.prototype,"totalWait",void 0),t([f("totalWait",["attributes"])],N.prototype,"readTotalWait",null),t([i()],N.prototype,"totalWaitDuration",void 0),t([i({readOnly:!0,json:{read:!1}})],N.prototype,"type",void 0),t([i()],N.prototype,"version",void 0),N=it=t([j("esri.rest.support.RouteInfo")],N);const Ke=N,zr={type:String,json:{read:{source:"token"},write:{target:"token"}}};let te=class extends Q(M){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.geometry=null,this.geometryType=null,this.name=null,this.spatialRelationship=null,this.type="layer",this.where=null}};t([i({type:Boolean,json:{write:!0}})],te.prototype,"doNotLocateOnRestrictedElements",void 0),t([i({types:zt,json:{read:Kt,write:!0}})],te.prototype,"geometry",void 0),t([F(Ar)],te.prototype,"geometryType",void 0),t([i({type:String,json:{name:"layerName",write:!0}})],te.prototype,"name",void 0),t([F(Nr,{name:"spatialRel"})],te.prototype,"spatialRelationship",void 0),t([i({type:String,json:{write:!0}})],te.prototype,"type",void 0),t([i({type:String,json:{write:!0}})],te.prototype,"where",void 0),te=t([j("esri.rest.support.DataLayer")],te);const Kr=te;var ot;let ke=ot=class extends re{constructor(e){super(e),this.doNotLocateOnRestrictedElements=null}clone(){return new ot({doNotLocateOnRestrictedElements:this.doNotLocateOnRestrictedElements,...this.cloneProperties()})}};t([i({type:Boolean,json:{write:!0}})],ke.prototype,"doNotLocateOnRestrictedElements",void 0),ke=ot=t([j("esri.rest.support.NetworkFeatureSet")],ke);const Hr=ke;let Se=class extends Q(M){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.url=null}};t([i({type:Boolean,json:{write:!0}})],Se.prototype,"doNotLocateOnRestrictedElements",void 0),t([i({type:String,json:{write:!0}})],Se.prototype,"url",void 0),Se=t([j("esri.rest.support.NetworkUrl")],Se);const Zr=Se;var st;let d=st=class extends Q(M){constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.findBestSequence=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnTraversedEdges=null,this.returnTraversedJunctions=null,this.returnTraversedTurns=null,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.timeWindowsAreUTC=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}static from(e){return Ht(st,e)}readAccumulateAttributes(e){return e==null?null:e.map(r=>G.fromJSON(r))}writeAccumulateAttributes(e,r,o){e!=null&&e.length&&(r[o]=e.map(s=>G.toJSON(s)))}writePointBarriers(e,r,o){Me(e,r,o)}writePolygonBarrier(e,r,o){Me(e,r,o)}writePolylineBarrier(e,r,o){Me(e,r,o)}readRestrictionAttributes(e){return e==null?null:e.map(r=>$e.fromJSON(r))}writeRestrictionAttributes(e,r,o){e!=null&&e.length&&(r[o]=e.map(s=>$e.toJSON(s)))}readStartTime(e,r){const{startTime:o}=r;return o==null?null:o==="now"?"now":new Date(o)}writeStartTime(e,r){e!=null&&(r.startTime=e==="now"?"now":e.getTime())}readStops(e,r){return ri(r.stops)}writeStops(e,r,o){Me(e,r,o)}};t([i({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],d.prototype,"accumulateAttributes",void 0),t([f("accumulateAttributes")],d.prototype,"readAccumulateAttributes",null),t([J("accumulateAttributes")],d.prototype,"writeAccumulateAttributes",null),t([i(zr)],d.prototype,"apiKey",void 0),t([i({json:{write:!0}})],d.prototype,"attributeParameterValues",void 0),t([i({type:String,json:{write:!0}})],d.prototype,"directionsLanguage",void 0),t([F(Lt)],d.prototype,"directionsLengthUnits",void 0),t([F(br)],d.prototype,"directionsOutputType",void 0),t([F(Sr)],d.prototype,"directionsStyleName",void 0),t([F(_e,{name:"directionsTimeAttributeName",ignoreUnknown:!1})],d.prototype,"directionsTimeAttribute",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"findBestSequence",void 0),t([i({type:Number,json:{write:!0}})],d.prototype,"geometryPrecision",void 0),t([i({type:Number,json:{write:!0}})],d.prototype,"geometryPrecisionM",void 0),t([i({type:Number,json:{write:!0}})],d.prototype,"geometryPrecisionZ",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"ignoreInvalidLocations",void 0),t([F(G,{name:"impedanceAttributeName",ignoreUnknown:!1})],d.prototype,"impedanceAttribute",void 0),t([i({type:Number,json:{write:!0}})],d.prototype,"outputGeometryPrecision",void 0),t([F(Pt)],d.prototype,"outputGeometryPrecisionUnits",void 0),t([F(Tr)],d.prototype,"outputLines",void 0),t([i({type:ae,json:{name:"outSR",write:!0}})],d.prototype,"outSpatialReference",void 0),t([i({json:{write:!0}})],d.prototype,"overrides",void 0),t([i({json:{name:"barriers",write:!0}})],d.prototype,"pointBarriers",void 0),t([J("pointBarriers")],d.prototype,"writePointBarriers",null),t([i({json:{write:!0}})],d.prototype,"polygonBarriers",void 0),t([J("polygonBarriers")],d.prototype,"writePolygonBarrier",null),t([i({json:{write:!0}})],d.prototype,"polylineBarriers",void 0),t([J("polylineBarriers")],d.prototype,"writePolylineBarrier",null),t([i({type:Boolean,json:{write:!0}})],d.prototype,"preserveFirstStop",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"preserveLastStop",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"preserveObjectID",void 0),t([i({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],d.prototype,"restrictionAttributes",void 0),t([f("restrictionAttributes")],d.prototype,"readRestrictionAttributes",null),t([J("restrictionAttributes")],d.prototype,"writeRestrictionAttributes",null),t([F(Rt)],d.prototype,"restrictUTurns",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"returnBarriers",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"returnDirections",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"returnPolygonBarriers",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"returnPolylineBarriers",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"returnRoutes",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"returnStops",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"returnTraversedEdges",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"returnTraversedJunctions",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"returnTraversedTurns",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"returnZ",void 0),t([i({json:{write:!0}})],d.prototype,"startTime",void 0),t([f("startTime")],d.prototype,"readStartTime",null),t([J("startTime")],d.prototype,"writeStartTime",null),t([i({type:Boolean,json:{write:!0}})],d.prototype,"startTimeIsUTC",void 0),t([i({json:{write:!0}})],d.prototype,"stops",void 0),t([f("stops")],d.prototype,"readStops",null),t([J("stops")],d.prototype,"writeStops",null),t([i({type:Boolean,json:{write:!0}})],d.prototype,"timeWindowsAreUTC",void 0),t([i({type:qe,json:{write:!0}})],d.prototype,"travelMode",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"useHierarchy",void 0),t([i({type:Boolean,json:{write:!0}})],d.prototype,"useTimeWindows",void 0),d=st=t([j("esri.rest.support.RouteParameters")],d);const Yr=d;function Xr(e){return e&&"type"in e}function Qr(e){return e&&"features"in e&&"doNotLocateOnRestrictedElements"in e}function ei(e){return e&&"url"in e}function ti(e){return e&&"features"in e}function ri(e){return Xr(e)?Kr.fromJSON(e):ei(e)?Zr.fromJSON(e):Qr(e)?Hr.fromJSON(e):ti(e)?re.fromJSON(e):null}function Me(e,r,o){e!=null&&(r[o]=E.isCollection(e)?{features:e.toArray().map(s=>s.toJSON())}:e.toJSON())}var at;let y=at=class extends Q(M){constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(e,r){return Ce(r.attributes.ArriveTime,r.attributes.ArriveTimeUTC)}readCumulativeCosts(e,r){return ie(r.attributes,"Cumul_")}readDepartTimeOffset(e,r){return Ce(r.attributes.DepartTime,r.attributes.DepartTimeUTC)}readServiceCosts(e,r){return ie(r.attributes,"Attr_")}writeServiceCosts(e,r){lt(e,r,"Attr_")}writeTimeWindowEnd(e,r){e!=null&&(r.attributes||(r.attributes={}),r.attributes.TimeWindowEnd=e.getTime())}writeTimeWindowStart(e,r){e!=null&&(r.attributes||(r.attributes={}),r.attributes.TimeWindowStart=e.getTime())}readViolations(e,r){return ie(r.attributes,"Violation_")}readWait(e,r){return ie(r.attributes,"Wait_")}static fromGraphic(e){return new at({arriveCurbApproach:e.attributes.ArrivalCurbApproach!=null?k.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:e.attributes.ArrivalTime!=null?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:e.attributes.CumulativeCosts!=null?fe(JSON.parse(e.attributes.CumulativeCosts)):null,cumulativeDistance:e.attributes.CumulativeMeters??null,cumulativeDuration:e.attributes.CumulativeMinutes??null,curbApproach:e.attributes.CurbApproach!=null?k.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:e.attributes.DepartureCurbApproach!=null?k.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:e.attributes.DepartureTime!=null?new Date(e.attributes.DepartureTime):null,departTimeOffset:e.attributes.DepartureUTCOffset??null,geometry:e.geometry,lateDuration:e.attributes.LateMinutes??null,locationType:e.attributes.LocationType!=null?we.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,routeName:e.attributes.RouteName,sequence:e.attributes.Sequence??null,serviceCosts:e.attributes.ServiceCosts!=null?fe(JSON.parse(e.attributes.ServiceCosts)):null,serviceDistance:e.attributes.ServiceMeters??null,serviceDuration:e.attributes.ServiceMinutes??null,status:e.attributes.Status!=null?pe.fromJSON(e.attributes.Status):null,symbol:e.symbol,timeWindowEnd:e.attributes.TimeWindowEnd!=null?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:e.attributes.TimeWindowEndUTCOffset??null,timeWindowStart:e.attributes.TimeWindowStart!=null?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:e.attributes.TimeWindowStartUTCOffset??null,waitDuration:e.attributes.WaitMinutes??null})}toGraphic(){const e={ObjectID:this.objectId,ArrivalCurbApproach:this.arriveCurbApproach!=null?k.toJSON(this.arriveCurbApproach):null,ArrivalTime:this.arriveTime!=null?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:this.cumulativeCosts!=null?JSON.stringify(be(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:this.curbApproach!=null?k.toJSON(this.curbApproach):null,DepartureCurbApproach:this.departCurbApproach!=null?k.toJSON(this.departCurbApproach):null,DepartureTime:this.departTime!=null?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:this.locationType!=null?we.toJSON(this.locationType):null,Name:this.name,RouteName:this.routeName,Sequence:this.sequence,ServiceCosts:this.serviceCosts!=null?JSON.stringify(be(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:this.status!=null?pe.toJSON(this.status):null,TimeWindowEnd:this.timeWindowEnd!=null?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:this.timeWindowEndOffset??this.arriveTimeOffset,TimeWindowStart:this.timeWindowStart!=null?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:this.timeWindowStartOffset??this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new q({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};y.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time",type:"esriFieldTypeInteger"},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString"},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble"},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate"},{name:"DepartureUTCOffset",alias:"Departure Time",type:"esriFieldTypeInteger"},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble"},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString"},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble"},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate"},{name:"TimeWindowEndUTCOffset",alias:"Time Window End Offset",type:"esriFieldTypeInteger"},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate"},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start Offset",type:"esriFieldTypeInteger"},{name:"WaitMinutes",alias:"Minutes Wait",type:"esriFieldTypeDouble"}],t([i({type:k.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:k.read}}})],y.prototype,"arriveCurbApproach",void 0),t([i({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],y.prototype,"arriveTime",void 0),t([i()],y.prototype,"arriveTimeOffset",void 0),t([f("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],y.prototype,"readArriveTimeOffset",null),t([i({json:{name:"attributes.Bearing",read:!1,write:!0}})],y.prototype,"bearing",void 0),t([i({json:{name:"attributes.BearingTol",read:!1,write:!0}})],y.prototype,"bearingTol",void 0),t([i()],y.prototype,"cumulativeCosts",void 0),t([f("cumulativeCosts",["attributes"])],y.prototype,"readCumulativeCosts",null),t([i()],y.prototype,"cumulativeDistance",void 0),t([i()],y.prototype,"cumulativeDuration",void 0),t([i({type:k.apiValues,json:{name:"attributes.CurbApproach",read:{reader:k.read},write:{writer:k.write}}})],y.prototype,"curbApproach",void 0),t([i({type:k.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:k.read}}})],y.prototype,"departCurbApproach",void 0),t([i({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],y.prototype,"departTime",void 0),t([i()],y.prototype,"departTimeOffset",void 0),t([f("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],y.prototype,"readDepartTimeOffset",null),t([i({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],y.prototype,"distanceToNetworkInMeters",void 0),t([i({type:je,json:{write:!0}})],y.prototype,"geometry",void 0),t([i()],y.prototype,"lateDuration",void 0),t([i({type:we.apiValues,json:{name:"attributes.LocationType",read:{reader:we.read},write:{writer:we.write}}})],y.prototype,"locationType",void 0),t([i({json:{name:"attributes.Name"}})],y.prototype,"name",void 0),t([i({json:{name:"attributes.NavLatency",read:!1,write:!0}})],y.prototype,"navLatency",void 0),t([i({json:{name:"attributes.ObjectID"}})],y.prototype,"objectId",void 0),t([i({type:ce})],y.prototype,"popupTemplate",void 0),t([i({json:{read:{source:"attributes.PosAlong"}}})],y.prototype,"posAlong",void 0),t([i({json:{name:"attributes.RouteName"}})],y.prototype,"routeName",void 0),t([i()],y.prototype,"serviceCosts",void 0),t([f("serviceCosts",["attributes"])],y.prototype,"readServiceCosts",null),t([J("serviceCosts")],y.prototype,"writeServiceCosts",null),t([i()],y.prototype,"serviceDistance",void 0),t([i()],y.prototype,"serviceDuration",void 0),t([i({json:{name:"attributes.Sequence"}})],y.prototype,"sequence",void 0),t([i({type:Ee.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:Ee.read}}})],y.prototype,"sideOfEdge",void 0),t([i({json:{read:{source:"attributes.SnapX"}}})],y.prototype,"snapX",void 0),t([i({json:{read:{source:"attributes.SnapY"}}})],y.prototype,"snapY",void 0),t([i({json:{read:{source:"attributes.SnapZ"}}})],y.prototype,"snapZ",void 0),t([i({json:{read:{source:"attributes.SourceID"}}})],y.prototype,"sourceId",void 0),t([i({json:{read:{source:"attributes.SourceOID"}}})],y.prototype,"sourceOid",void 0),t([i({type:pe.apiValues,json:{read:{source:"attributes.Status",reader:pe.read}}})],y.prototype,"status",void 0),t([i({types:ye})],y.prototype,"symbol",void 0),t([i({type:Date,json:{name:"attributes.TimeWindowEnd"}})],y.prototype,"timeWindowEnd",void 0),t([J("timeWindowEnd")],y.prototype,"writeTimeWindowEnd",null),t([i()],y.prototype,"timeWindowEndOffset",void 0),t([i({type:Date,json:{name:"attributes.TimeWindowStart"}})],y.prototype,"timeWindowStart",void 0),t([J("timeWindowStart")],y.prototype,"writeTimeWindowStart",null),t([i()],y.prototype,"timeWindowStartOffset",void 0),t([i({readOnly:!0,json:{read:!1}})],y.prototype,"type",void 0),t([i()],y.prototype,"violations",void 0),t([f("violations",["attributes"])],y.prototype,"readViolations",null),t([i()],y.prototype,"waitDuration",void 0),t([i()],y.prototype,"wait",void 0),t([f("wait",["attributes"])],y.prototype,"readWait",null),y=at=t([j("esri.rest.support.Stop")],y);const Ie=y;function He(e){return e.length?e:null}function nt(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:nt("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:nt("esriGeometryPolyline")}}}function Pe(e){return"layers"in e}function ii(e){return e.declaredClass==="esri.rest.support.FeatureSet"}function oi(e){return e.declaredClass==="esri.rest.support.NetworkFeatureSet"}function si(e,r,o){var ut,pt,ct,dt,yt,mt;const s=(ut=r.networkDataset)==null?void 0:ut.networkAttributes,a=(s==null?void 0:s.filter(({usageType:m})=>m==="cost"))??[],u=o.travelMode??r.defaultTravelMode;if(u==null)return void xt().warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:l,distanceAttributeName:c}=u,T=a.find(({name:m})=>m===l),w=a.find(({name:m})=>m===c),p=((pt=o.travelMode)==null?void 0:pt.impedanceAttributeName)??o.impedanceAttribute??r.impedance,D=T==null?void 0:T.units,I=w==null?void 0:w.units;if(!D||!I)throw new H("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const C=o.directionsLanguage??r.directionsLanguage,b=o.accumulateAttributes??r.accumulateAttributeNames??[],g=new Set(a.filter(({name:m})=>m===l||m===c||m===p||m!=null&&b.includes(m)).map(({name:m})=>m)),v=m=>{for(const ht in m)g.has(ht)||delete m[ht]};for(const m of e.pointBarriers)m.costs!=null&&(m.addedCost=m.costs[p]??0,v(m.costs));for(const m of e.polygonBarriers)m.costs!=null&&(m.scaleFactor=m.costs[p]??1,v(m.costs));for(const m of e.polylineBarriers)m.costs!=null&&(m.scaleFactor=m.costs[p]??1,v(m.costs));const{routeInfo:n}=e,{findBestSequence:A,preserveFirstStop:h,preserveLastStop:P,startTimeIsUTC:Z,timeWindowsAreUTC:Wt}=o;n.analysisSettings=new Jt({accumulateAttributes:b,directionsLanguage:C,findBestSequence:A,preserveFirstStop:h,preserveLastStop:P,startTimeIsUTC:Z,timeWindowsAreUTC:Wt,travelMode:u}),n.totalDuration=de(((ct=n.totalCosts)==null?void 0:ct[l])??0,D),n.totalDistance=Ze(((dt=n.totalCosts)==null?void 0:dt[c])??0,I),n.totalLateDuration=de(((yt=n.totalViolations)==null?void 0:yt[l])??0,D),n.totalWaitDuration=de(((mt=n.totalWait)==null?void 0:mt[l])??0,D),n.totalCosts!=null&&v(n.totalCosts),n.totalViolations!=null&&v(n.totalViolations),n.totalWait!=null&&v(n.totalWait);for(const m of e.stops)m.serviceCosts!=null&&(m.serviceDuration=de(m.serviceCosts[l]??0,D),m.serviceDistance=Ze(m.serviceCosts[c]??0,I),v(m.serviceCosts)),m.cumulativeCosts!=null&&(m.cumulativeDuration=de(m.cumulativeCosts[l]??0,D),m.cumulativeDistance=Ze(m.cumulativeCosts[c]??0,I),v(m.cumulativeCosts)),m.violations!=null&&(m.lateDuration=de(m.violations[l]??0,D),v(m.violations)),m.wait!=null&&(m.waitDuration=de(m.wait[l]??0,D),v(m.wait))}async function gt(e){const r=ae.WGS84;return await cr(e.spatialReference,r),dr(e,r)}function de(e,r){switch(r){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function Ze(e,r){return r==="decimal-degrees"||r==="points"||r==="unknown"?e:yr(e,r,"meters")}function ai(e){const{attributes:r,geometry:o,popupTemplate:s,symbol:a}=e.toGraphic().toJSON();return{attributes:r,geometry:o,popupInfo:s,symbol:a}}const ni=E.ofType(Re),li=E.ofType(Ue),St=E.ofType(Ae),wt=E.ofType(De),Nt=E.ofType(Oe),At=E.ofType(Ie),Et="esri.layers.RouteLayer",xt=()=>Dt.getLogger(Et);let S=class extends Zt(Yt(Xt(Qt(er(mr))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new Ft,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new St,this.polygonBarriers=new wt,this.polylineBarriers=new Nt,this.routeInfo=null,this.spatialReference=ae.WGS84,this.stops=new At,this.type="route";const r=()=>{this._setStopSymbol(this.stops)};this.addHandles(tr(()=>this.stops,"change",r,{sync:!0,onListenerAdd:r}))}writeFeatureCollectionWebmap(e,r,o,s){const a=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter(c=>!!c),u=a.map((c,T)=>T),l=s.origin==="web-map"?"featureCollection.layers":"layers";rr(l,a,r),r.opacity=this.opacity,r.visibility=this.visible,r.visibleLayers=u}readDirectionLines(e,r){return this._getNetworkFeatures(r,"DirectionLines",o=>Re.fromGraphic(o))}readDirectionPoints(e,r){return this._getNetworkFeatures(r,"DirectionPoints",o=>Ue.fromGraphic(o))}get fullExtent(){var a;const e=new It({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:ae.WGS84});if(((a=this.routeInfo)==null?void 0:a.geometry)!=null)return this.routeInfo.geometry.extent??e;if(this.stops==null)return e;const r=this.stops.filter(u=>u.geometry!=null);if(r.length<2)return e;const{spatialReference:o}=r.at(0).geometry;if(o==null)return e;const s=r.toArray().map(u=>{const l=u.geometry;return[l.x,l.y]});return new ir({points:s,spatialReference:o}).extent}readMaxScale(e,r){var a;const o=Pe(r)?r.layers:(a=r.featureCollection)==null?void 0:a.layers,s=o==null?void 0:o.find(u=>u.layerDefinition.maxScale!=null);return(s==null?void 0:s.layerDefinition.maxScale)??0}readMinScale(e,r){var a;const o=Pe(r)?r.layers:(a=r.featureCollection)==null?void 0:a.layers,s=o==null?void 0:o.find(u=>u.layerDefinition.minScale!=null);return(s==null?void 0:s.layerDefinition.minScale)??0}readPointBarriers(e,r){return this._getNetworkFeatures(r,"Barriers",o=>Ae.fromGraphic(o))}readPolygonBarriers(e,r){return this._getNetworkFeatures(r,"PolygonBarriers",o=>De.fromGraphic(o))}readPolylineBarriers(e,r){return this._getNetworkFeatures(r,"PolylineBarriers",o=>Oe.fromGraphic(o))}readRouteInfo(e,r){return this._getNetworkFeatures(r,"RouteInfo",o=>Ke.fromGraphic(o)).at(0)??null}readSpatialReference(e,r){var c,T;const o=Pe(r)?r.layers:(c=r.featureCollection)==null?void 0:c.layers;if(!(o!=null&&o.length))return ae.WGS84;const{layerDefinition:s,featureSet:a}=o[0],u=a.features[0],l=((T=u==null?void 0:u.geometry)==null?void 0:T.spatialReference)??a.spatialReference??s.spatialReference??s.extent.spatialReference??vt;return ae.fromJSON(l)}readStops(e,r){return this._getNetworkFeatures(r,"Stops",o=>Ie.fromGraphic(o),o=>this._setStopSymbol(o))}get title(){var e;return((e=this.routeInfo)==null?void 0:e.name)??"Route"}set title(e){this._overrideIfSome("title",e)}get url(){return ft.routeServiceUrl}set url(e){e!=null?this._set("url",or(e,xt())):this._set("url",ft.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){this.directionLines!=null&&(this.directionLines.removeAll(),this._set("directionLines",null)),this.directionPoints!=null&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),this.routeInfo!=null&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:r}=this;if(!r)throw new H("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!r.id)throw new H("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if(r.type!=="Feature Collection")throw new H("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(this.routeInfo==null)throw new H("routelayer:route-unsolved","save() requires a solved route");const{portal:o}=r;await o.signIn(),o.user||await r.reload();const{itemUrl:s,itemControl:a}=r;if(a!=="admin"&&a!=="update")throw new H("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const u={messages:[],origin:"portal-item",portal:o,url:s?sr(s):void 0,writtenProperties:[]},l=this.write(void 0,u);return r.extent=await gt(e),r.title=this.title,await r.update({data:l}),r}async saveAs(e,r={}){var c;if(await this.load(),this.routeInfo==null)throw new H("routelayer:route-unsolved","saveAs() requires a solved route");const o=ar.from(e).clone();o.extent??(o.extent=await gt(this.fullExtent)),o.id=null,o.portal??(o.portal=nr.getDefault()),o.title??(o.title=this.title),o.type="Feature Collection",o.typeKeywords=["Data","Feature Collection",lr.MULTI_LAYER,"Route Layer"];const{portal:s}=o,a={messages:[],origin:"portal-item",portal:s,url:null,writtenProperties:[]};await s.signIn();const u=r==null?void 0:r.folder,l=this.write(void 0,a);return await((c=s.user)==null?void 0:c.addItem({item:o,folder:u,data:l})),this.portalItem=o,hr(a),a.portalItem=o,o}async solve(e,r){const o=(e==null?void 0:e.stops)??this.stops,s=(e==null?void 0:e.pointBarriers)??He(this.pointBarriers),a=(e==null?void 0:e.polylineBarriers)??He(this.polylineBarriers),u=(e==null?void 0:e.polygonBarriers)??He(this.polygonBarriers);if(o==null)throw new H("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((ii(o)||oi(o))&&o.features.length<2||E.isCollection(o)&&o.length<2)throw new H("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(E.isCollection(o))for(const g of o)g.routeName=null;const l=e==null?void 0:e.apiKey,c=this.url,T=await this._getServiceDescription(c,l,r),w=(e==null?void 0:e.travelMode)??T.defaultTravelMode,p=(e==null?void 0:e.accumulateAttributes)??[];w!=null&&(p.push(w.distanceAttributeName),w.timeAttributeName&&p.push(w.timeAttributeName));const D={accumulateAttributes:p,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:s,polylineBarriers:a,polygonBarriers:u,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!s,returnDirections:!0,returnPolygonBarriers:!!u,returnPolylineBarriers:!!a,returnRoutes:!0,returnStops:!0,stops:o},I=Yr.from(e??{});let C;I.set(D);try{C=await Vr(c,I,r)}catch(g){throw ur(g)?g:new H("routelayer:failed-route-request","the routing request failed",{error:g})}const b=this._toRouteLayerSolution(C);return this._isOverridden("title")||(this.title=b.routeInfo.name??"Route"),si(b,T,I),b}update(e){const{stops:r,directionLines:o,directionPoints:s,pointBarriers:a,polylineBarriers:u,polygonBarriers:l,routeInfo:c}=e;this.set({stops:r,pointBarriers:a,polylineBarriers:u,polygonBarriers:l}),this._set("directionLines",o),this._set("directionPoints",s),this._set("routeInfo",c),c.geometry!=null&&(this.spatialReference=c.geometry.spatialReference)}_getNetworkFeatures(e,r,o,s){var g;const a=Pe(e)?e.layers:(g=e.featureCollection)==null?void 0:g.layers,u=a==null?void 0:a.find(v=>v.layerDefinition.name===r);if(u==null)return new E;const{layerDefinition:l,popupInfo:c,featureSet:T}=u,w=l.drawingInfo.renderer,{features:p}=T,D=T.spatialReference??l.spatialReference??l.extent.spatialReference??vt,I=w&&pr(w),C=ae.fromJSON(D),b=p.map(v=>{const n=q.fromJSON(v);n.geometry!=null&&v.geometry!=null&&v.geometry.spatialReference==null&&(n.geometry.spatialReference=C);const A=o(n);return A.symbol??(A.symbol=(I==null?void 0:I.getSymbol(n))??this._getNetworkSymbol(r)),A.popupTemplate??(A.popupTemplate=c&&ce.fromJSON(c)),A});return s&&b.some(({symbol:v})=>!v)&&s(b),new E(b)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,r,o){if(this._cachedServiceDescription!=null&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const s=await Ut(e,r,o);return this._cachedServiceDescription={serviceDescription:s,url:e},s}_setStopSymbol(e){if(!e||e.length===0||this.defaultSymbols.stops==null||e.every(({symbol:p})=>p!=null))return;const{first:r,last:o,middle:s,unlocated:a,waypoint:u,break:l}=this.defaultSymbols.stops;if(this.routeInfo==null||e.length===1)return void e.forEach((p,D)=>{switch(D){case 0:p.symbol=r;break;case e.length-1:p.symbol=o;break;default:p.symbol=s}});const c=e.map(({sequence:p})=>p).filter(p=>p!=null),T=Math.min(...c),w=Math.max(...c);for(const p of e)p.sequence!==T?p.sequence!==w?p.status==="ok"||p.status==="not-located-on-closest"?p.locationType!=="waypoint"?p.locationType!=="break"?p.symbol=s:p.symbol=l:p.symbol=u:p.symbol=a:p.symbol=o:p.symbol=r}_toRouteLayerSolution(e){var w,p,D,I,C,b,g;const r=(w=e.routeResults[0].stops)==null?void 0:w.map(v=>Ie.fromJSON(v.toJSON()));this._setStopSymbol(r);const o=new At(r),s=new wt((p=e.polygonBarriers)==null?void 0:p.map(v=>{const n=De.fromJSON(v.toJSON());return n.symbol=this.defaultSymbols.polygonBarriers,n})),a=new Nt((D=e.polylineBarriers)==null?void 0:D.map(v=>{const n=Oe.fromJSON(v.toJSON());return n.symbol=this.defaultSymbols.polylineBarriers,n})),u=new St((I=e.pointBarriers)==null?void 0:I.map(v=>{const n=Ae.fromJSON(v.toJSON());return n.symbol=this.defaultSymbols.pointBarriers,n})),l=(C=e.routeResults[0].route)==null?void 0:C.toJSON(),c=Ke.fromJSON(l);c.symbol=this.defaultSymbols.routeInfo;const T=new li((b=e.routeResults[0].directionPoints)==null?void 0:b.features.map(v=>{const n=Ue.fromJSON(v.toJSON());return n.symbol=this.defaultSymbols.directionPoints,n}));return{directionLines:new ni((g=e.routeResults[0].directionLines)==null?void 0:g.features.map(v=>{const n=Re.fromJSON(v.toJSON());return n.symbol=this.defaultSymbols.directionLines,n})),directionPoints:T,pointBarriers:u,polygonBarriers:s,polylineBarriers:a,routeInfo:c,stops:o}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",Re.fields,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",Ue.fields,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,r,o,s,a,u){if(!(e!=null&&e.length))return null;const l=this.spatialReference.toJSON(),{fullExtent:c,maxScale:T,minScale:w}=this;return{featureSet:{features:e.toArray().map(p=>ai(p)),geometryType:o,spatialReference:l},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:r!=null?r.toJSON():nt(o)}},extent:c.toJSON(),fields:s,geometryType:o,hasM:!1,hasZ:!1,maxScale:T,minScale:w,name:a,objectIdField:"ObjectID",spatialReference:l,title:u,type:"Feature Layer",typeIdField:""}}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",Ae.fields,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",De.fields,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",Oe.fields,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(this.routeInfo!=null?new E([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",Ke.fields,"RouteInfo","Route Details")}_writeStops(){var u,l,c;const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",Ie.fields,"Stops","Stops");if(e==null)return null;const{stops:r}=this.defaultSymbols,o=(u=r==null?void 0:r.first)==null?void 0:u.toJSON(),s=(l=r==null?void 0:r.middle)==null?void 0:l.toJSON(),a=(c=r==null?void 0:r.last)==null?void 0:c.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:s,uniqueValueInfos:[{value:"1",symbol:o,label:"First Stop"},{value:`${this.stops.length}`,symbol:a,label:"Last Stop"}]},e}};t([i({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:this.portalItem==null}}}}}}})],S.prototype,"_featureCollection",void 0),t([J(["web-map","portal-item"],"_featureCollection")],S.prototype,"writeFeatureCollectionWebmap",null),t([i({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:this.portalItem!=null}}}}}}})],S.prototype,"_type",void 0),t([i({nonNullable:!0,type:Ft})],S.prototype,"defaultSymbols",void 0),t([i({readOnly:!0})],S.prototype,"directionLines",void 0),t([f(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],S.prototype,"readDirectionLines",null),t([i({readOnly:!0})],S.prototype,"directionPoints",void 0),t([f(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],S.prototype,"readDirectionPoints",null),t([i({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],S.prototype,"featureCollectionType",void 0),t([i({readOnly:!0})],S.prototype,"fullExtent",null),t([i({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],S.prototype,"legendEnabled",void 0),t([i({type:["show","hide"]})],S.prototype,"listMode",void 0),t([i({type:Number,nonNullable:!0,json:{write:!1}})],S.prototype,"maxScale",void 0),t([f(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],S.prototype,"readMaxScale",null),t([i({type:Number,nonNullable:!0,json:{write:!1}})],S.prototype,"minScale",void 0),t([f(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],S.prototype,"readMinScale",null),t([i({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],S.prototype,"operationalLayerType",void 0),t([i({nonNullable:!0,type:E.ofType(Ae)})],S.prototype,"pointBarriers",void 0),t([f(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],S.prototype,"readPointBarriers",null),t([i({nonNullable:!0,type:E.ofType(De)})],S.prototype,"polygonBarriers",void 0),t([f(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],S.prototype,"readPolygonBarriers",null),t([i({nonNullable:!0,type:E.ofType(Oe)})],S.prototype,"polylineBarriers",void 0),t([f(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],S.prototype,"readPolylineBarriers",null),t([i({readOnly:!0})],S.prototype,"routeInfo",void 0),t([f(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],S.prototype,"readRouteInfo",null),t([i({type:ae})],S.prototype,"spatialReference",void 0),t([f(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],S.prototype,"readSpatialReference",null),t([i({nonNullable:!0,type:E.ofType(Ie)})],S.prototype,"stops",void 0),t([f(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],S.prototype,"readStops",null),t([i()],S.prototype,"title",null),t([i({readOnly:!0,json:{read:!1}})],S.prototype,"type",void 0),t([i()],S.prototype,"url",null),S=t([j(Et)],S);const ji=S;export{ji as default};
