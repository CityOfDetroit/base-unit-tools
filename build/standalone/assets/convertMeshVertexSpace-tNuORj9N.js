import{c7 as p,s,$ as i}from"./index-CM6rNXwm.js";import{l as c}from"./MeshVertexAttributes-DI_7XrZT.js";import{M as n}from"./vertexSpaceConversion-CLiEeys2.js";import"./mat3-CBySG3eY.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./spatialReferenceEllipsoidUtils-78BzhCvj.js";import"./computeTranslationToOriginAndRotation-OPsk2FpV.js";import"./meshVertexSpaceUtils-C67ZPPMW.js";import"./MeshLocalVertexSpace-BmpKVA7R.js";import"./vec3-BeO8PIkv.js";import"./projection-DcMAtHpl.js";import"./DoubleArray-COUhz1EA.js";import"./BufferView-BpytCjJ1.js";import"./vec2-D26RIo49.js";import"./vec4-NUjlP1yE.js";async function j(t,r,m){await Promise.resolve(),p(m);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new c({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{j as convertMeshVertexSpace};
