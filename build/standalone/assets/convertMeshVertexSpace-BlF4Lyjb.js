import{c7 as p,s,$ as i}from"./index-CCrAUeKG.js";import{l as c}from"./MeshVertexAttributes-BVy9cpc9.js";import{M as n}from"./vertexSpaceConversion-mtp-EhuS.js";import"./mat3-CIXcZBmu.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./spatialReferenceEllipsoidUtils-vtmACvay.js";import"./computeTranslationToOriginAndRotation-6a8G0_hT.js";import"./meshVertexSpaceUtils-Bze82FGi.js";import"./MeshLocalVertexSpace-D0zPGggf.js";import"./vec3-D1q0HpG6.js";import"./projection-CYX5FyXR.js";import"./DoubleArray-Bh8y2JW4.js";import"./BufferView-WIndRwRP.js";import"./vec2-Ct1rwEet.js";import"./vec4-CPfBIDNU.js";async function j(t,r,m){await Promise.resolve(),p(m);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new c({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{j as convertMeshVertexSpace};
