import{c7 as p,s,$ as i}from"./index-DksN7PFj.js";import{l as c}from"./MeshVertexAttributes-Db4E_hj-.js";import{M as n}from"./vertexSpaceConversion-CkuJcR52.js";import"./mat3-DFF2EmkJ.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./spatialReferenceEllipsoidUtils-CxwPHI_c.js";import"./computeTranslationToOriginAndRotation-DATI8fLO.js";import"./meshVertexSpaceUtils-DhmrIAmT.js";import"./MeshLocalVertexSpace-CVXooOIM.js";import"./vec3-50NZJdhJ.js";import"./projection-CfDMIx4C.js";import"./DoubleArray-D6ZrDW96.js";import"./BufferView-CuzuuqPQ.js";import"./vec2-Ce0Pw1Ty.js";import"./vec4-DWL_B3i6.js";async function j(t,r,m){await Promise.resolve(),p(m);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new c({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{j as convertMeshVertexSpace};
