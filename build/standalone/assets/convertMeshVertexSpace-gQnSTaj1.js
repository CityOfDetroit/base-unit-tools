import{c7 as p,s,$ as i}from"./index-DPsNinHg.js";import{l as c}from"./MeshVertexAttributes-ByuPlaxA.js";import{M as n}from"./vertexSpaceConversion-hIzojACL.js";import"./mat3-rZ-mTNvn.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./spatialReferenceEllipsoidUtils-DezkNiKH.js";import"./computeTranslationToOriginAndRotation-Bv7U4Gwl.js";import"./meshVertexSpaceUtils-WW_N9la0.js";import"./MeshLocalVertexSpace-BGj50tFT.js";import"./vec3-ByRlkoJb.js";import"./projection-Cwlhe49F.js";import"./DoubleArray-RTOd8YJI.js";import"./BufferView-D0ENpO6e.js";import"./vec2-T798VsVG.js";import"./vec4-DZrfEqRw.js";async function j(t,r,m){await Promise.resolve(),p(m);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new c({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{j as convertMeshVertexSpace};
