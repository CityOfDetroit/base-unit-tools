const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/geometryEngine-CYLxwWNV.js","assets/geometryEngineBase-RmbNeFm7.js","assets/_commonjsHelpers-DCkdB7M8.js","assets/hydrated-CyScFVKZ.js","base-unit-tools.js","assets/imageryUtils-CDlwTo2b.js","assets/utils-Jjz4_DkG.js","assets/originUtils-D69mHv66.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/jsonContext-s3Fsu8Oz.js","assets/saveAPIKeyUtils-DEHCy5M8.js","assets/saveUtils-B-jsrmby.js"])))=>i.map(i=>d[i]);
import{i0 as Rt,iu as ut,V as ae,s as P,G as Le,Q as A,aZ as L,U as ht,ay as z,bV as vt,B as b,D as S,cy as ft,E as Q,F as St,_ as ze,d3 as Ye,da as He,aX as Tt,aS as _t,iv as kt,dR as Ft,gR as Mt,fs as Ct,cm as mt,iw as Ot,O as De,M as Pt,bX as $t,aG as Dt,I as Bt,cq as Nt,cu as Et,cs as Jt,ct as At,cG as Lt,ei as zt,cF as Ht,cr as Wt,cv as Gt,co as jt,dz as Ut,aK as qt,cg as he,el as Vt,eJ as ye,bx as Xt,ey as Yt,a$ as Kt,cx as Qt,es as Zt,cE as ei}from"../base-unit-tools.js";import{h as dt,D as pt,i as ti,a as ii,p as We,c as si,N as Be,l as ni,d as ri,b as ai,e as oi,f as Ke,o as li,g as Qe,$ as Ze,W as et,j as ci,q as ui,U as hi,E as fi,L as tt,t as mi,k as di,m as pi,n as yi}from"./fetchRasterInfo-Dr4xPpcN.js";import{z as te,p as gi}from"./TileInfo-DukwWvse.js";import{U as ke,j as xi,n as ve,D as yt,R as wi,u as Ii,l as bi,a as Ri,g as V,f as vi,m as Ge,s as Si,L as Ti,b as _i,c as Se,E as ki,W as Fi,h as Mi,d as je,P as Ci,T as Oi,r as Pi,e as it,F as $i,i as Di,N as Bi,k as ge,B as Ni,o as Ei,p as Ji,q as Ai}from"./dataUtils-CWWgqc6R.js";import{T as Ne,D as xe,j as st,r as nt,o as Li,V as Fe,J as be,e as zi,Z as Hi,C as Wi,U as Ee,S as gt,y as Ue,c as Gi,R as ji}from"./PolynomialTransform-lDbLrmVK.js";import{_ as Ui}from"./QueueProcessor-DN-TQb24.js";import{j as qi}from"./TilemapCache-CyaQ09Zu.js";import"./normalizeUtils-D9bgWdv2.js";import"./normalizeUtilsCommon-Ckjde9KV.js";import"./utils-DIqDM5ql.js";import"./utils-ChAK3Vwv.js";import"./ClassBreaksDefinition-BtYpOAZY.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./ReactiveMap-BFLAZxL8.js";import"./signal-DCYIP3-a.js";import"./ByteSizeUnit-BsxeN7wM.js";let Vi=class{constructor(e=15e3,n=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,n)}decreaseRefCount(e,n){const i=e+"/"+n,s=this._cachedBlocks;if(s.has(i)){const a=s.get(i);return a.refCount--,a.refCount<=0&&(s.delete(i),a.controller&&a.controller.abort()),a.refCount}return 0}getBlock(e,n){const i=e+"/"+n,s=this._cachedBlocks;if(s.has(i)){const a=s.get(i);return a.ts=Date.now(),a.refCount++,s.delete(i),s.set(i,a),a.block}return null}putBlock(e,n,i,s){const a=this._cachedBlocks,r=e+"/"+n;if(a.has(r)){const l=a.get(r);l.ts=Date.now(),l.refCount++}else a.set(r,{block:i,ts:Date.now(),refCount:1,controller:s});this._trim(),this._updateTimer()}deleteBlock(e,n){const i=this._cachedBlocks,s=e+"/"+n;i.has(s)&&i.delete(s)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(this._timer!=null)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const n=Array.from(e),i=Date.now();for(let s=0;s<n.length&&n[s][1].ts<=i-this._duration;s++)e.delete(n[s][0]);e.size===0&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(this._size===-1||this._size>=e.size)return;const n=Array.from(e);for(let i=0;i<n.length-this._size;i++)e.delete(n[i][0])}_clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}};const Te=new Map,ie=new Vi;function rt(t,e){return e==null?t:`${t}?sliceId=${e}`}function Xi(t,e,n){var r,l;const i=Te.get(t);if(!i)return e==null?ie.decreaseRefCount(t,n):0;if(e==null||i[e]==null)return ie.decreaseRefCount(t,n);const s=(r=i[e])==null?void 0:r.cache,a=s==null?void 0:s.get(n);if(s&&a){if(a.refCount--,a.refCount===0){s.delete(n);for(let o=0;o<i.length;o++)(l=i[o])==null||l.cache.delete(n);a.controller&&a.controller.abort()}return a.refCount}return 0}function at(t,e,n){var a,r,l;const i=Te.get(t);if(!i)return e==null?ie.getBlock(t,n):null;if(e==null||i[e]==null){for(let o=0;o<i.length;o++){const c=(a=i[o])==null?void 0:a.cache.get(n);if(c)return c.refCount++,c.block}return ie.getBlock(t,n)}const s=(r=i[e])==null?void 0:r.cache.get(n);if(s)return s.refCount++,s.block;for(let o=0;o<i.length;o++){if(o===e||!i[o])continue;const c=(l=i[o])==null?void 0:l.cache,u=c==null?void 0:c.get(n);if(c&&u)return u.refCount++,c.set(n,u),u.block}return null}function ot(t,e,n,i,s=null){var l;const a=Te.get(t);if(!a)return void(e==null&&ie.putBlock(t,n,i,s));if(e==null||a[e]==null)return void ie.putBlock(t,n,i,s);const r={refCount:1,block:i,isResolved:!1,isRejected:!1,controller:s};i.then(()=>r.isResolved=!0).catch(()=>r.isRejected=!0),(l=a[e])==null||l.cache.set(n,r)}function Yi(t,e,n){var s;const i=Te.get(t);i?e!=null&&i[e]!=null?(s=i[e])==null||s.cache.delete(n):ie.deleteBlock(t,n):e==null&&ie.deleteBlock(t,n)}const lt=8,Ki=256;let Qi=0,J=class extends Rt(St){constructor(){super(...arguments),this._tileFetchQueue=new Ui({concurrency:32,process:(t,e)=>this._fetchRawTile(t.pyramidLevel,t.row,t.col,{...t.options,signal:e})}),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const t=Ne();this.addResolvingPromise(t),await this.when()}normalizeCtorArgs(t){return t!=null&&t.ioConfig&&(t={...t,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:te.create(),...t.ioConfig}}),t}get _isGlobalWrappableSource(){const{rasterInfo:t}=this,e=xe(t.spatialReference);return e!=null&&t.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){const{transform:t}=this.rasterInfo;return t==null||t.type==="gcs-shift"}set rasterJobHandler(t){var e,n;this._set("rasterJobHandler",t),this.datasetFormat==="Function"&&((n=(e=this.primaryRasters)==null?void 0:e.rasters)==null||n.forEach(i=>i.rasterJobHandler=t))}get rasterId(){return this.url||"rasterId-"+Qi++}set url(t){this._set("url",ut(t,ae.getLogger(this)))}async open(t){throw new P("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(t,e,n,i={}){const s=i.tileInfo||this.rasterInfo.storageInfo.tileInfo,a=this.getTileExtentFromTileInfo(t,e,n,s);return i={noClip:!0,...i},this.fetchPixels(a,s.size[0],s.size[1],i)}async identify(t,e={}){var k;t=Le(A,t).clone().normalize();const{multidimensionalDefinition:n,timeExtent:i}=e,{rasterInfo:s}=this,{hasMultidimensionalTranspose:a,multidimensionalInfo:r}=s;let{transposedVariableName:l}=e;const o=r!=null&&a&&(i!=null||dt(n));o&&!l&&(l=n!=null&&n.length>0?n[0].variableName??void 0:r.variables[0].name,e={...e,transposedVariableName:l}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:c,extent:u}=s,{datumTransformation:h}=e;let f=st(t,c,h);if(!u.intersects(f))return{location:f,value:null};if(s.transform!=null){const C=s.transform.inverseTransform(f);if(!s.nativeExtent.intersects(C))return{location:C,value:null};f=C}let m=0;const g=l!=null&&r!=null&&s.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){const C=this.primaryRasters.rasters[0];if(g)return C.identify(f,e);const{pixelSize:E}=s,O=3,$=E.x*O/2,D=E.y*O/2,B=new L({xmin:f.x-$,xmax:f.x+$,ymin:f.y-D,ymax:f.y+D,spatialReference:c}),Z={interpolation:"nearest",multidimensionalDefinition:n,sliceId:e.sliceId},{pixelBlock:W}=await C.fetchPixels(B,O,O,Z),{pixelBlock:G}=await this.fetchPixels(B,O,O,Z);if(W==null)return{location:f,value:null};const U=Math.floor(O*O*.5),le=!W.mask||W.mask[U]?W.pixels.map(j=>j[U]):null;let X;return G!=null&&(X=!G.mask||G.mask[U]?G.pixels.map(j=>j[U]):void 0),{location:f,value:le,processedValue:X,pyramidLevel:0}}if(!g){if(e.srcResolution)m=nt(e.srcResolution,s,this.ioConfig.sampling).pyramidLevel;else if(m=await this.computeBestPyramidLevelForLocation(t,e),m==null)return{location:f,value:null}}const p=this.identifyPixelLocation(f,m,null,g);if(p===null)return{location:f,value:null};const{row:d,col:y,rowOffset:x,colOffset:w,blockWidth:I}=p,T=l??e.sliceId,R=rt(this.rasterId,T),_=`${m}/${d}/${y}`;let M=at(R,null,_);M==null&&(M=this.fetchRawTile(m,d,y,e),ot(R,null,_,M));const v=await M;if(!((k=v==null?void 0:v.pixels)!=null&&k.length))return{location:f,value:null};const F=x*I+w;return this._processIdentifyResult(v,{srcLocation:f,position:F,pyramidLevel:m,useTransposedTile:!!g,requestSomeSlices:o,identifyOptions:e})}async fetchPixels(t,e,n,i={}){t=Li(t),i=this._getRequestOptionsWithSliceId(i);const{_hasNoneOrGCSShiftTransform:s}=this;if(i.requestRawData&&s)return this._fetchPixels(t,e,n,i);const a=xe(t.spatialReference),r=Fe(t);if(a==null||r===0||r===1&&this._isGlobalWrappableSource&&s)return this._fetchPixels(t,e,n,i);if(r>=3)return{extent:t,pixelBlock:null};const l=[],{xmin:o,xmax:c}=t,u=Math.round(a/(c-o)*e),h=u-Math.round((a/2-o)/(c-o)*e);let f=0;const m=[];for(let y=0;y<=r;y++){const x=new L({xmin:y===0?o:-a/2,xmax:y===r?c-a*y:a/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),w=y===0?u-h:y===r?e-f:u;f+=w,m.push(w);const I=i.disableWrapAround&&y>0?null:this._fetchPixels(x,w,n,i);l.push(I)}const g=(await Promise.all(l)).map(y=>y==null?void 0:y.pixelBlock);let p=null;const d={width:e,height:n};return this.rasterJobHandler?p=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:g,srcMosaicSize:d,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:m},i)).pixelBlock:p=ke(g,d,{blockWidths:m}),{extent:t,srcExtent:be(t,this.rasterInfo.spatialReference,i.datumTransformation),pixelBlock:p}}async fetchRawPixels(t,e,n,i={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const s=await this._fetchRawTiles(t,e,n,i),{nativeExtent:a,nativePixelSize:r,storageInfo:l}=this.rasterInfo,o=2**t,c=r.x*o,u=r.y*o,h=new L({xmin:a.xmin+c*e.x,xmax:a.xmin+c*(e.x+n.width-1),ymin:a.ymax-u*(e.y+n.height-1),ymax:a.ymax-u*e.y,spatialReference:a.spatialReference});if(!s)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:f,mosaicSize:m}=s;if(f.length===1&&f[0]!=null&&f[0].width===n.width&&f[0].height===n.height)return{extent:h,srcExtent:h,pixelBlock:s.pixelBlocks[0]};const g=t>0?l.pyramidBlockWidth:l.blockWidth,p=t>0?l.pyramidBlockHeight:l.blockHeight,d={x:e.x%g,y:e.y%p};let y;return this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:m,destDimension:n,clipOffset:d,clipSize:n,coefs:null,sampleSpacing:null,interpolation:i.interpolation,alignmentInfo:null,blockWidths:null},i)).pixelBlock:y=ke(f,m,{clipOffset:d,clipSize:n}),{extent:h,srcExtent:h,pixelBlock:y}}fetchRawTile(t,e,n,i){throw new P("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return be(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?xi(t,e):this.rasterJobHandler.decode({data:t,options:e})}async request(t,e,n=0){const{customFetchParameters:i}=this.ioConfig,{range:s,query:a,headers:r}=e;n=n??e.retryCount??this.ioConfig.retryCount;const l=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await ht(t,{...e,query:{...a,...i},headers:{...r,...l}})}catch(o){if(n>0)return n--,this.request(t,e,n);throw o}}getSliceIndex(t){const{multidimensionalInfo:e}=this.rasterInfo;return e==null||t==null||t.length===0?null:pt(t,e)}getTileExtentFromTileInfo(t,e,n,i){const s=i.lodAt(t);return this.getTileExtent({x:s.resolution,y:s.resolution},e,n,i.origin,i.spatialReference,i.size)}updateTileInfo(){const{storageInfo:t,spatialReference:e,extent:n,pixelSize:i}=this.rasterInfo,{pyramidResolutions:s}=t;if(!t.tileInfo){const a=[],r=t.maximumPyramidLevel||0;let l=(i.x+i.y)/2,o=1/.0254*96*l;for(let u=0;u<=r&&(a.unshift(new gi({level:r-u,resolution:l,scale:o})),u!==r);u++)if(s){const h=(s[u].x+s[u].y)/2;o*=h/l,l=h}else l*=2,o*=2;const c=new A({x:n.xmin,y:n.ymax,spatialReference:e});t.tileInfo=new te({origin:c,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:a}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,n=512,i){const{width:s,height:a,nativeExtent:r,pixelSize:l,spatialReference:o}=t,c=new A({x:r.xmin,y:r.ymax,spatialReference:o});i==null&&(i=Math.max(0,Math.round(Math.log(Math.max(s,a))/Math.LN2-8)));const u=this.computeBlockBoundary(r,512,512,{x:r.xmin,y:r.ymax},[l],i);t.storageInfo=new ve({blockWidth:e,blockHeight:n,pyramidBlockWidth:e,pyramidBlockHeight:n,origin:c,firstPyramidLevel:1,maximumPyramidLevel:i,blockBoundary:u})}async computeBestPyramidLevelForLocation(t,e={}){return 0}computeBlockBoundary(t,e,n,i,s,a=0,r=2){if(s.length===1&&a>0){s=[...s];let{x:u,y:h}=s[0];for(let f=0;f<a;f++)u*=r,h*=r,s.push({x:u,y:h})}const l=[],{x:o,y:c}=i;for(let u=0;u<s.length;u++){const{x:h,y:f}=s[u];l.push({minCol:Math.floor((t.xmin-o+.1*h)/e/h),maxCol:Math.floor((t.xmax-o-.1*h)/e/h),minRow:Math.floor((c-t.ymax+.1*f)/n/f),maxRow:Math.floor((c-t.ymin-.1*f)/n/f)})}return l}getPyramidPixelSize(t){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:n,pyramidScalingFactor:i}=this.rasterInfo.storageInfo;if(t===0)return e;if(n!=null&&n.length)return n[t-1];const s=i**t;return{x:e.x*s,y:e.y*s}}identifyPixelLocation(t,e,n,i){const{spatialReference:s,nativeExtent:a,storageInfo:r}=this.rasterInfo,{maximumPyramidLevel:l,origin:o,transposeInfo:c}=r,u=i&&c!=null?c.tileSize[0]:r.blockWidth,h=i&&c!=null?c.tileSize[1]:r.blockHeight,f=st(t,s,n);if(!a.intersects(f)||e<0||e>l)return null;const m=this.getPyramidPixelSize(e),{x:g,y:p}=m,d=(o.y-f.y)/p/h,y=(f.x-o.x)/g/u,x=Math.min(h-1,Math.floor((d-Math.floor(d))*h)),w=Math.min(u-1,Math.floor((y-Math.floor(y))*u));return{pyramidLevel:e,row:Math.floor(d),col:Math.floor(y),rowOffset:x,colOffset:w,blockWidth:u,srcLocation:f}}getTileExtent(t,e,n,i,s,a){const[r,l]=a,o=i.x+n*r*t.x,c=o+r*t.x,u=i.y-e*l*t.y,h=u-l*t.y;return new L({xmin:o,xmax:c,ymin:h,ymax:u,spatialReference:s})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,e,n){const i=this.rasterInfo.storageInfo.blockBoundary[t];return!i||i.maxRow<e||i.maxCol<n||i.minRow>e||i.minCol>n}updateImageSpaceRasterInfo(t){const{extent:e,pixelSize:n}=t;if(e.xmin===-.5&&e.ymax===.5&&n.x===1&&n.y===1&&t.transform==null)return;const{width:i,height:s}=t,a=z.WebMercator;t.spatialReference=a,t.extent=t.nativeExtent=new L({xmin:-.5,ymax:.5,xmax:i-.5,ymin:.5-s,spatialReference:a}),t.isPseudoSpatialReference=!0,t.transform=null,t.pixelSize=new A({x:1,y:1,spatialReference:a});const{extent:r,storageInfo:l}=t;if(l){l.origin=new A({x:r.xmin,y:r.ymax,spatialReference:a});const{pyramidResolutions:o,tileInfo:c}=l;if(o&&o.forEach(u=>{u.x/=n.x,u.y/=n.y}),c){c.origin=l.origin;const u=(t.nativePixelSize.x+t.nativePixelSize.y)/2;c.lods.forEach((h,f)=>{h.resolution=u*2**f,h.scale=96*h.resolution/.0254})}}}async _fetchPixels(t,e,n,i={}){let s=Fe(t);if(s>=2)return{extent:t,pixelBlock:null};const a=this._getSourceDataInfo(t,e,n,i),{pyramidLevel:r,srcResolution:l,srcExtent:o,srcWidth:c,srcHeight:u,ul:h}=a;if(c===0||u===0)return{extent:t,srcExtent:o,pixelBlock:null};const{rasterInfo:f}=this,m=f.transform,g=(m==null?void 0:m.type)==="gcs-shift",p=xe(t.spatialReference)!=null;!g&&p||(s=Fe(a.srcExtent,g));const d=await this._fetchRawTiles(r,h,{width:c,height:u,wrapCount:s},i);if(!d)return{extent:t,srcExtent:o,pixelBlock:null};const y=f.storageInfo,x=r>0?y.pyramidBlockWidth:y.blockWidth,w=r>0?y.pyramidBlockHeight:y.blockHeight;let{x:I,y:T}=f.pixelSize;if(r>0){const{pyramidResolutions:j,pyramidScalingFactor:bt}=y;if(j!=null&&j[r-1])({x:I,y:T}=j[r-1]);else{const Xe=bt**r;I*=Xe,T*=Xe}}const R=f.spatialReference,_=new A({x:I,y:T,spatialReference:R}),M=x===c&&w===u&&h.x%x==0&&h.y%w==0,v=new A({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/n,spatialReference:t.spatialReference}),F=!t.spatialReference.equals(R),k=R.isGeographic?1e-9:1e-4,{datumTransformation:C}=i;if(!F&&M&&d.pixelBlocks.length===1&&x===e&&w===n&&Zi(l,v,k))return{extent:t,srcExtent:o,srcTilePixelSize:_,pixelBlock:d.pixelBlocks[0]};const E=p&&xe(o.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,O=i.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");O&&!this.rasterJobHandler&&await Ne();const $=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:d.extent,pixelSize:v.toJSON(),datumTransformation:C,rasterTransform:m,hasWrapAround:s>0||E,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:O},i):zi({projectedExtent:t,srcBufferExtent:d.extent,pixelSize:v,datumTransformation:C,rasterTransform:m,hasWrapAround:s>0||E,isAdaptive:!1,includeGCSGrid:O});let D;const B=!i.requestRawData,Z={rows:$.spacing[0],cols:$.spacing[1]},W=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(r,d.extent.xmin):void 0,{pixelBlocks:G,mosaicSize:U,isPartiallyFilled:le}=d;let X=null;if(this.rasterJobHandler)({pixelBlock:D,localNorthDirections:X}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:G,srcMosaicSize:U,destDimension:B?{width:e,height:n}:null,coefs:B?$.coefficients:null,sampleSpacing:B?Z:null,projectDirections:O,gcsGrid:O?$.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:i.interpolation,alignmentInfo:W,blockWidths:null},i));else{const j=ke(G,U,{alignmentInfo:W});D=B?yt(j,{width:e,height:n},$.coefficients,Z,i.interpolation):j,O&&$.gcsGrid&&(X=wi({width:e,height:n},$.gcsGrid),D=Ii(D,this.rasterInfo.dataType,X))}return i.requestRawData||O?{extent:t,srcExtent:o,srcTilePixelSize:_,pixelBlock:D,transformGrid:$,localNorthDirections:X,isPartiallyFilled:le}:{extent:t,srcExtent:o,srcTilePixelSize:_,pixelBlock:D}}async _fetchRawTiles(t,e,n,i){const{origin:s,blockBoundary:a}=this.rasterInfo.storageInfo,{blockWidth:r,blockHeight:l}=this.getBlockWidthHeight(t);let{x:o,y:c}=e,{width:u,height:h,wrapCount:f}=n;const m=this._getRasterTileAlignmentInfo(t,0);i.buffer&&(o-=i.buffer.cols,c-=i.buffer.rows,u+=2*i.buffer.cols,h+=2*i.buffer.rows);let g=0,p=0,d=0;f&&m!=null&&({worldColumnCountFromOrigin:p,originColumnOffset:d,rightPadding:g}=m,p*m.blockWidth-g>=o+u&&(g=0));const y=Math.floor(o/r),x=Math.floor(c/l),w=Math.floor((o+u+g-1)/r),I=Math.floor((c+h+g-1)/l),T=a[t];if(!T)return null;const{minRow:R,minCol:_,maxCol:M,maxRow:v}=T;if(f===0&&(I<R||w<_||x>v||y>M))return null;const F=new Array;let k=!1;const C=this.ioConfig.allowPartialFill==null?i.allowPartialFill:this.ioConfig.allowPartialFill;for(let W=x;W<=I;W++)for(let G=y;G<=w;G++){let U=G;if(!i.disableWrapAround&&f&&m!=null&&p<=G&&(U=G-p-d),W>=R&&U>=_&&v>=W&&M>=U){const le=this._tileFetchQueue.push({pyramidLevel:t,row:W,col:U,options:i},{signal:i.signal});C?F.push(new Promise(X=>{le.then(j=>X(j)).catch(()=>{k=!0,X(null)})})):F.push(le)}else F.push(Promise.resolve(null))}if(F.length===0)return null;const E=await Promise.all(F),O={height:(I-x+1)*l,width:(w-y+1)*r},{spatialReference:$}=this.rasterInfo,D=this.getPyramidPixelSize(t),{x:B,y:Z}=D;return{extent:new L({xmin:s.x+y*r*B,xmax:s.x+(w+1)*r*B,ymin:s.y-(I+1)*l*Z,ymax:s.y-x*l*Z,spatialReference:$}),pixelBlocks:E,mosaicSize:O,isPartiallyFilled:k}}_fetchRawTile(t,e,n,i){const s=this.rasterInfo.storageInfo.blockBoundary[t];if(!s)return Promise.resolve(null);const{minRow:a,minCol:r,maxCol:l,maxRow:o}=s;if(e<a||n<r||e>o||n>l)return Promise.resolve(null);const c=rt(this.rasterId,i.sliceId),u=`${t}/${e}/${n}`;let h=at(c,i.registryId,u);if(h==null){const f=new AbortController;h=this.fetchRawTile(t,e,n,{...i,signal:f.signal}),ot(c,i.registryId,u,h,f),h.catch(()=>Yi(c,i.registryId,u))}return i.signal&&vt(i,()=>{Xi(c,i.registryId,u)}),h}_computeMagDirValues(t){var o;const{bandCount:e,dataType:n}=this.rasterInfo;if(!(e===2&&n==="vector-magdir"||n==="vector-uv")||(t==null?void 0:t.length)!==2||!((o=t[0])!=null&&o.length))return null;const i=t[0].length;if(n==="vector-magdir"){const c=t[1].map(u=>(u+360)%360);return[t[0],c]}const[s,a]=t,r=[],l=[];for(let c=0;c<i;c++){const[u,h]=bi([s[c],a[c]]);r.push(u),l.push(h)}return[r,l]}_getRasterTileAlignmentInfo(t,e){return this._rasterTileAlignmentInfo==null&&(this._rasterTileAlignmentInfo=Hi(this.rasterInfo)),this._rasterTileAlignmentInfo.pyramidsInfo==null?null:{startX:e,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform,...this._rasterTileAlignmentInfo.pyramidsInfo[t]}}_getSourceDataInfo(t,e,n,i={}){const s={datumTransformation:i.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};i.srcResolution&&(s.srcResolution=i.srcResolution,this._updateSourceDataInfo(t,s));const a=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:r,srcHeight:l,pyramidLevel:o}=s,c=r/e,u=l/n,h=o<a&&c*u>=16,f=o===a&&this._requireTooManySrcTiles(r,l,e,n);if(h||f||r===0||l===0){const m=new A({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/n,spatialReference:t.spatialReference});let g=Wi(m,this.rasterInfo.spatialReference,t,s.datumTransformation);const p=!g||i.srcResolution&&g.x+g.y<i.srcResolution.x+i.srcResolution.y;if(h&&i.srcResolution&&p){const d=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(a-o+3>=d){const y=2**d;g={x:i.srcResolution.x*y,y:i.srcResolution.y*y}}}g&&(s.srcResolution=g,this._updateSourceDataInfo(t,s))}return this._requireTooManySrcTiles(s.srcWidth,s.srcHeight,e,n)&&(s.srcWidth=0,s.srcHeight=0),s}_requireTooManySrcTiles(t,e,n,i){const{tileInfo:s}=this.rasterInfo.storageInfo,a=Math.ceil(t/s.size[0])*Math.ceil(e/s.size[1]),r=t/n,l=e/i,o=Math.max(1,(n+i)/1024);return a>=Ki*o||r>lt||l>lt}_updateSourceDataInfo(t,e){e.srcWidth=0,e.srcHeight=0;const{rasterInfo:n}=this,i=n.spatialReference,{srcResolution:s,datumTransformation:a}=e,{pyramidLevel:r,pyramidResolution:l,excessiveReading:o}=nt(s,n,this.ioConfig.sampling);if(o)return;let c=e.srcExtent||be(t,i,a);if(c==null)return;const u=n.transform;u&&(c=u.inverseTransform(c)),e.srcExtent=c;const{x:h,y:f}=n.storageInfo.origin,m=Math.floor((c.xmin-h)/l.x+.1),g=Math.floor((f-c.ymax)/l.y+.1),p=Math.floor((c.xmax-h)/l.x-.1),d=Math.floor((f-c.ymin)/l.y-.1),y=c.width<.1*l.x?0:p-m+1,x=c.height<.1*l.y?0:d-g+1;e.pyramidLevel=r,e.pyramidResolution=l,e.srcWidth=y,e.srcHeight=x,e.ul={x:m,y:g}}_getRequestOptionsWithSliceId(t){return this.rasterInfo.multidimensionalInfo!=null&&t.sliceId==null&&(t={...t,sliceId:this.getSliceIndex(t.multidimensionalDefinition)}),t}_processIdentifyResult(t,e){const{srcLocation:n,position:i,pyramidLevel:s,useTransposedTile:a}=e,r=t.pixels[0].length/t.width/t.height;if(!(!t.mask||t.mask[i]))return{location:n,value:null};const{multidimensionalInfo:l}=this.rasterInfo;if(l==null||!a){const d=t.pixels.map(w=>w[i]),y={location:n,value:d,pyramidLevel:s},x=this._computeMagDirValues(d.map(w=>[w]));return x!=null&&x.length&&(y.magdirValue=x.map(w=>w[0])),y}let o=t.pixels.map(d=>d.slice(i*r,i*r+r)),c=this._computeMagDirValues(o);const{requestSomeSlices:u,identifyOptions:h}=e;let f=ti(l,h.transposedVariableName);if(u){const d=ii(f,h.multidimensionalDefinition,h.timeExtent);o=o.map(y=>d.map(x=>y[x])),c=c==null?void 0:c.map(y=>d.map(x=>y[x])),f=d.map(y=>f[y])}const m=t.noDataValues||this.rasterInfo.noDataValue,g={pixels:o,pixelType:t.pixelType};let p;return m!=null&&(Ri(g,m),p=g.mask),{location:n,value:null,dataSeries:f.map((d,y)=>{const x={value:(p==null?void 0:p[y])===0?null:o.map(w=>w[y]),multidimensionalDefinition:d.multidimensionalDefinition.map(w=>new We({...w,isSlice:!0}))};return c!=null&&c.length&&(x.magdirValue=[c[0][y],c[1][y]]),x}),pyramidLevel:s}}};function Zi(t,e,n){return Math.abs(t.x-e.x)<n&&Math.abs(t.y-e.y)<n}b([S()],J.prototype,"_rasterTileAlignmentInfo",void 0),b([S()],J.prototype,"_tileFetchQueue",void 0),b([S({readOnly:!0})],J.prototype,"_isGlobalWrappableSource",null),b([S({readOnly:!0})],J.prototype,"_hasNoneOrGCSShiftTransform",null),b([S()],J.prototype,"rasterJobHandler",null),b([S({readOnly:!0})],J.prototype,"rasterId",null),b([S(ft)],J.prototype,"url",null),b([S({type:String,json:{write:!0}})],J.prototype,"datasetName",void 0),b([S({type:String,json:{write:!0}})],J.prototype,"datasetFormat",void 0),b([S()],J.prototype,"hasUniqueSourceStorageInfo",void 0),b([S()],J.prototype,"rasterInfo",void 0),b([S()],J.prototype,"ioConfig",void 0),b([S()],J.prototype,"sourceJSON",void 0),J=b([Q("esri.layers.support.rasterDatasets.BaseRaster")],J);const oe=J;function es(t,e){if(t.spatialReference.equals(e))return t;const n=Ye(t.spatialReference),i=Ye(e);if(n===i)return t;const s=n/i;return{x:t.x*s,y:t.y*s}}async function Je(t,e,n){if(n.type==="extent")return is(t,e,n);const{width:i,height:s}=t,a=new Uint8Array(i*s),{contains:r,intersects:l}=await ze(async()=>{const{contains:o,intersects:c}=await import("./geometryEngine-CYLxwWNV.js");return{contains:o,intersects:c}},__vite__mapDeps([0,1,2,3,4]));return l(e,n)?n.type==="polyline"?ss(t,e,n):r(n,e)?t:ts(t,e,n):new V({pixelType:t.pixelType,width:i,height:s,mask:a,maskIsAlpha:!1,pixels:[...t.pixels]})}function ts(t,e,n){if(!t)return t;const{width:i,height:s}=t,a=e.width/i,r=e.height/s,{xmin:l,ymax:o}=e;let c;if(n.type==="extent"){const d=(n.xmin-l)/a,y=(n.xmax-l)/a,x=(o-n.ymax)/r,w=(o-n.ymin)/r;c=[[[d,x],[d,w],[y,w],[y,x],[d,x]]]}else c=n.rings.map(d=>d.map(([y,x])=>[(y-l)/a,(o-x)/r]));const u=document.createElement("canvas");u.width=i,u.height=s;const h=u.getContext("2d");h.fillStyle="#f00",h.beginPath(),c.forEach(d=>{h.moveTo(d[0][0],d[0][1]);for(let y=0;y<d.length;y++)h.lineTo(d[y][0],d[y][1]);h.closePath()}),h.fill();const f=h.getImageData(0,0,i,s).data,m=t.mask,g=i*s,p=new Uint8Array(g);for(let d=0;d<g;d++)m&&!m[d]||(p[d]=f[4*d+3]>127?255:0);return new V({pixelType:t.pixelType,width:i,height:s,mask:p,maskIsAlpha:!1,pixels:[...t.pixels]})}function is(t,e,n){const{width:i,height:s}=t,a=new Uint8Array(i*s),r=e.width/i,l=e.height/s;if(n.width/r<.5||n.height/l<.5)return new V({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]});const{xmin:o,xmax:c,ymin:u,ymax:h}=e,{xmin:f,xmax:m,ymin:g,ymax:p}=n,d=Math.max(o,f),y=Math.min(c,m),x=Math.max(u,g),w=Math.min(h,p),I=.5*r,T=.5*l;if(y-d<I||w-x<T||y<o+I||d>c-I||x>h-T||w<u+T)return new V({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]});const R=Math.max(0,(d-o)/r),_=Math.min(i,Math.max(0,(y-o)/r)),M=Math.max(0,(h-w)/l),v=Math.min(s,Math.max(0,(h-x)/l)),F=Math.round(R),k=Math.round(_)-1,C=Math.round(M),E=Math.round(v)-1;if(F===k&&R%1>.5&&_%1<.5||C===E&&M%1>.5&&v%1<.5)return new V({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]});if(F===0&&C===0&&k===i&&E===s)return t;const O=t.mask;for(let $=C;$<=E;$++)for(let D=F;D<=k;D++){const B=$*i+D;a[B]=O?O[B]:255}return new V({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]})}function ss(t,e,n){const{width:i,height:s}=t,a=new Uint8Array(i*s),r=e.width/i,l=e.height/s,{xmin:o,ymax:c}=e,{paths:u}=n,h=t.mask;for(let f=0;f<u.length;f++){const m=u[f];for(let g=0;g<m.length-1;g++){const[p,d]=m[g],[y,x]=m[g+1];let w=Math.floor((c-d)/l),I=Math.floor((c-x)/l);if(I<w){const R=w;w=I,I=R}w=Math.max(0,w),I=Math.min(s-1,I);const T=(y-p)/(x-d);for(let R=w;R<=I;R++){const _=R===w?Math.max(d,x):(s+1-R)*l,M=R===I?Math.min(d,x):_-l;let v=Math.floor(x===d?(p-o)/r:(T*(_-d)+p-o)/r),F=Math.floor(x===d?(y-o)/r:(T*(M-d)+p-o)/r);if(F<v){const C=v;v=F,F=C}const k=R*i;v=Math.max(0,v),F=Math.min(i-1,F);for(let C=k+v;C<=k+F;C++)a[C]=h?h[C]:255}}}return new V({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]})}function ns(t,e,n,i=!0){const{spatialReference:s}=t,{x:a,y:r}=es(n,s);let l,o,c;const u=e.type==="extent"?e:e.extent;let{xmin:h,xmax:f,ymax:m,ymin:g}=u;const{xmin:p,ymax:d}=t.extent;return i?(h=p+(h>p?a*Math.round((h-p)/a):0),m=d-(m<d?r*Math.round((d-m)/r):0),f=p+(f>p?a*Math.round((f-p)/a):0),g=d-(g<d?r*Math.round((d-g)/r):0),l=new L({xmin:h,ymax:m,xmax:f,ymin:g,spatialReference:s}),o=Math.round(l.width/a),c=Math.round(l.height/r)):(o=Math.floor((f-h)/a+.8),c=Math.floor((m-g)/r+.8),h=p+(h>p?a*Math.floor((h-p)/a+.1):0),m=d-(m<d?r*Math.floor((d-m)/r+.1):0),f=h+o*a,g=m-c*r,l=new L({xmin:h,ymax:m,xmax:f,ymin:g,spatialReference:s})),{extent:l,width:o,height:c}}const rs=40;let se=class extends oe{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map}async open(e){var u,h,f,m;await this.init();const{rasterFunction:n}=this;(h=(u=this.primaryRasters)==null?void 0:u.rasters)!=null&&h.length?n.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=n.getPrimaryRasters(),this.rasterJobHandler&&((f=this.primaryRasters.rasters)==null||f.forEach(g=>g.rasterJobHandler=this.rasterJobHandler)));const{rasters:i,rasterIds:s}=this.primaryRasters,a=i.map(g=>g.rasterInfo?void 0:g.open(e));await Promise.all(a);const r=i.map(({rasterInfo:g})=>g),l=n.bind({rasterInfos:r,rasterIds:s});if(n.rawSourceRasterInfos=r,!l.success||r.length===0)throw new P("raster-function:open",`cannot bind the function: ${l.error??""}`);const o=n.functionName==="Table"?n:(m=n.functionArguments)==null?void 0:m.raster;(o==null?void 0:o.functionName)==="Table"&&(n.rasterInfo.attributeTable=He.fromJSON(o.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const c=r[0];this.hasUniqueSourceStorageInfo=r.length===1||r.slice(1).every(g=>as(g,c)),this.set("sourceJSON",i[0].sourceJSON),this.set("rasterInfo",n.rasterInfo),await this._updateClipGeometry()}async syncJobHandler(){var e;return(e=this.rasterJobHandler)==null?void 0:e.updateRasterFunction(this.rasterFunction)}async fetchPixels(e,n,i,s={}){var I,T;const{rasters:a,rasterIds:r}=this.primaryRasters;let l=!1;const{interpolation:o}=s,c=(I=this.rasterFunction.flatWebGLFunctionChain)==null?void 0:I.hasFocalFunction;!s.requestRawData&&c&&(l=a.length===1&&!s.skipRasterFunction,s={...s,interpolation:"bilinear",requestRawData:l});const u=a.map(R=>R.fetchPixels(e,n,i,s)),h=await Promise.all(u),f=h.map(R=>R.pixelBlock),m=l||s.requestRawData?h.map(R=>R.srcTilePixelSize):null;if(s.skipRasterFunction||f.every(R=>R==null))return h[0];const g=((T=h.find(R=>R.pixelBlock!=null))==null?void 0:T.extent)??e;let p=this.rasterJobHandler?await this.rasterJobHandler.process({extent:g,primaryPixelBlocks:f,primaryPixelSizes:m,primaryRasterIds:r}):this.rasterFunction.process({extent:g,primaryPixelBlocks:f,primaryPixelSizes:m,primaryRasterIds:r});const{transformGrid:d}=h[0];if(!l||p==null||d==null){const R=s.noClip?null:this.getClippingGeometry(g.spatialReference);return s.noClip||s.requestRawData||p==null||!R||(p=await Je(p,g,R)),{...h[0],pixelBlock:p}}const y={rows:d.spacing[0],cols:d.spacing[1]};let x;this.rasterJobHandler?x=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[p],srcMosaicSize:{width:p.width,height:p.height},destDimension:{width:n,height:i},coefs:d.coefficients,sampleSpacing:y,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:o,alignmentInfo:void 0,blockWidths:null},s)).pixelBlock:x=yt(p,{width:n,height:i},d.coefficients,y,o);const w=s.noClip?null:this.getClippingGeometry(e.spatialReference);return s.noClip||s.requestRawData||x==null||w==null||(x=await Je(x,e,w)),{extent:e,srcExtent:h[0].srcExtent,pixelBlock:x}}getClippingGeometry(e){const n=this._clippingGeometry.get("0");if(!e||!n)return n;const i=os(e);let s=this._clippingGeometry.get(i);return s!=null||(s=e.equals(n.spatialReference)?n:Ee(n,e),this._clippingGeometry.set(i,s)),s}async _updateClipGeometry(){const e=this.rasterFunction.getClippingGeometries()[0];let n=e==null?void 0:e.clippingGeometry;if(n&&e.clippingType==="inside"){const{extent:i}=this.rasterInfo,{difference:s,densify:a}=await ze(async()=>{const{difference:l,densify:o}=await import("./geometryEngine-CYLxwWNV.js");return{difference:l,densify:o}},__vite__mapDeps([0,1,2,3,4]));let r=a(Tt.fromExtent(i),2*(i.width+i.height)/rs);r=Ee(r,n.spatialReference),n=s(r,n)}this._clippingGeometry.clear(),n&&this._clippingGeometry.set("0",n)}};b([S({type:String,json:{write:!0}})],se.prototype,"datasetFormat",void 0),b([S()],se.prototype,"tileType",void 0),b([S()],se.prototype,"rasterFunction",void 0),b([S()],se.prototype,"primaryRasters",void 0),se=b([Q("esri.layers.support.rasterDatasets.FunctionRaster")],se);const xt=se;function as(t,e){const{storageInfo:n,pixelSize:i,spatialReference:s,extent:a}=t,{storageInfo:r,pixelSize:l,spatialReference:o,extent:c}=e;return i.x===l.x&&i.y===l.y&&s.equals(o)&&a.equals(c)&&n.blockHeight===r.blockHeight&&n.blockWidth===r.blockWidth&&n.maximumPyramidLevel===r.maximumPyramidLevel}function os(t){return String(t.wkid??t.wkt??t.wkt2)}const ls=t=>{let e=class extends t{constructor(...i){var s,a;super(...i),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=((a=(s=i[0])==null?void 0:s.raster)==null?void 0:a.datasetFormat)==="Function"}get fullExtent(){var i;return(i=this.serviceRasterInfo)==null?void 0:i.extent}set multidimensionalDefinition(i){this._set("multidimensionalDefinition",i),this.updateRenderer()}set rasterFunction(i){var s;((s=i==null?void 0:i.functionName)==null?void 0:s.toLowerCase())==="none"&&(i=void 0),this._set("rasterFunction",i),this.updateRasterFunction()}get rasterInfo(){return kt(ae.getLogger(this),"rasterInfo",{replacement:"serviceRasterInfo",version:"4.29",warnOnce:!0}),this._get("serviceRasterInfo")}set url(i){this._set("url",ut(i,ae.getLogger(this)))}set renderer(i){i==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("renderer",i),this.updateRenderer())}readRenderer(i,s,a){var l,o;const r=(o=(l=s==null?void 0:s.layerDefinition)==null?void 0:l.drawingInfo)==null?void 0:o.renderer;return ai(r,a)||void 0}async convertVectorFieldData(i,s){const{serviceRasterInfo:a}=this;if(i==null||!a)return null;const r=this._rasterJobHandler.instance,l=a.dataType;return r?r.convertVectorFieldData({pixelBlock:i,dataType:l},s):vi(i,l)}async computeStatisticsHistograms(i,s){await this.load(s),i=Le(oi,i).clone();const{serviceRasterInfo:a}=this;if(a==null)throw new P("imagery-tile-mixin:compute-statistics-histograms","serviceRasterInfo must be specified");const{geometry:r}=i;if(r==null)throw new P("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let l=r;const{spatialReference:o}=a;r.spatialReference.equals(o)||(await Ne(),l=r.type==="extent"?be(r,o):Ee(r,o));const c=i.pixelSize??new A({x:a.pixelSize.x,y:a.pixelSize.y,spatialReference:o}),{extent:u,width:h,height:f}=ns(a,l,c),m=await this.fetchPixels(u,h,f,{...s,interpolation:"nearest"});if(m.pixelBlock==null)throw new P("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const g=await Je(m.pixelBlock,u,l),p=this._rasterJobHandler.instance;return p?p.computeStatisticsHistograms({pixelBlock:g},s):Ge(g)}async createFlowMesh(i,s){const a=this._rasterJobHandler.instance;return a?a.createFlowMesh(i,s):Si(i.meshType,i.simulationSettings,i.flowData,s.signal!=null?s.signal:new AbortController().signal)}normalizeRasterFetchOptions(i){var l,o;const{multidimensionalInfo:s}=this.serviceRasterInfo??{};if(s==null)return i;let a=i.multidimensionalDefinition||this.multidimensionalDefinition;a!=null&&a.length||(a=Ke(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const r=i.timeExtent||this.timeExtent;if(a!=null&&r!=null&&(r.start!=null||r.end!=null)){a=a.map(y=>y.clone());const c=(o=(l=s.variables.find(({name:y})=>y===a[0].variableName))==null?void 0:l.dimensions)==null?void 0:o.find(({name:y})=>y==="StdTime"),u=a.find(({dimensionName:y})=>y==="StdTime");if(!c||!u)return{...i,multidimensionalDefinition:null};const{start:h,end:f}=r,m=h==null?null:h.getTime(),g=f==null?null:f.getTime(),p=m??g,d=g??m;if(c.values!=null){const y=c.values.filter(x=>{if(Array.isArray(x)){if(p===d)return x[0]<=p&&x[1]>=p;const w=x[0]<=p&&x[1]>p||x[0]<d&&x[1]>=d,I=x[0]>=p&&x[1]<=d||x[0]<p&&x[1]>d;return w||I}return p===d?x===p:x>=p&&x<=d});if(y.length){const x=y.sort((w,I)=>{const T=Array.isArray(w)?w[0]:w,R=Array.isArray(w)?w[1]:w,_=Array.isArray(I)?I[0]:I,M=Array.isArray(I)?I[1]:I;return p===d?T-_:Math.abs(R-d)-Math.abs(M-d)})[0];u.values=[x]}else a=null}else if(c.hasRegularIntervals&&c.extent){const[y,x]=c.extent;p>x||d<y?a=null:u.values=p===d?[p]:[Math.max(y,p),Math.min(x,d)]}}return a!=null&&li(a,this.multidimensionalSubset)?{...i,multidimensionalDefinition:null}:{...i,multidimensionalDefinition:a}}async updateRasterFunction(){var u,h,f;if(!this.loaded||this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){const m=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&m&&this._set("rasterFunction",Be.fromJSON(m)),void(this._cachedRasterFunctionJson=(u=this.rasterFunction)==null?void 0:u.toJSON())}let i,s=this.raster,a=!1;s.datasetFormat==="Function"?(i=s.primaryRasters.rasters,s=i[0],a=!0):i=[s];const{rasterFunction:r}=this;if(r){const m={raster:s};i.length>1&&i.forEach(d=>m[d.url]=d);const g=gt(((h=r.functionDefinition)==null?void 0:h.toJSON())??r.toJSON(),m),p=new xt({rasterFunction:g});p.rasterJobHandler=this._rasterJobHandler.instance,await p.open(),this._cachedRasterFunctionJson=(f=this.rasterFunction)==null?void 0:f.toJSON(),this.raster=p}else this.raster=s,this._cachedRasterFunctionJson=null,await s.when();if(this._cachedRendererJson=null,!a&&!r)return;const{bandIds:l}=this,{bandCount:o}=this.raster.rasterInfo,c=l!=null&&l.length?l.some(m=>m>=o):o>=3;l&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:i,symbolizer:s}=this;if(!i||!s||!this.renderer)return;const{rasterInfo:a}=this.raster,r=Qe(a,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),l=r==null?void 0:r.name,o=Ze({...this.renderer.toJSON(),variableName:l});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(o))return;const c=this._rasterJobHandler.instance;c&&(s.rasterInfo=et(a,l),s.rendererJSON=o,s.bind(),await c.updateSymbolizer(s),this._cachedRendererJson=o)}async applyRenderer(i,s){const a=i==null?void 0:i.pixelBlock;if(!(a!=null&&a.pixels&&a.pixels.length>0))return null;let r;await this.updateRenderer();const l=this._rasterJobHandler.instance,o=this.bandIds??[];return r=l?await l.symbolize({...i,simpleStretchParams:s,bandIds:o}):this.symbolizer.symbolize({...i,simpleStretchParams:s,bandIds:o}),r}getTileUrl(i,s,a){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${i}/${s}/${a}`:""}getCompatibleTileInfo(i,s,a=!1){if(!this.loaded||s==null)return null;if(a&&i.equals(this.spatialReference))return this.tileInfo;const r=Ft(i);return te.create({size:256,spatialReference:i,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(i){var s;return this.loaded?((s=this._compatibleFullExtent)!=null&&s.spatialReference.equals(i)||(this._compatibleFullExtent=this.raster.computeExtent(i)),this._compatibleFullExtent):null}async fetchTile(i,s,a,r={}){var o;if(n(this),r.requestAsImageElement){const c=this.getTileUrl(i,s,a);return ht(c,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:r.signal}).then(u=>u.data)}const{serviceRasterInfo:l}=this;if(l.multidimensionalInfo!=null&&(r=this.normalizeRasterFetchOptions(r)).multidimensionalDefinition==null){const c=r.tileInfo||l.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(i,s,a,c),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),((o=this.renderer)==null?void 0:o.type)==="raster-shaded-relief"&&(r={...r,buffer:{cols:1,rows:1}}),this.raster.fetchTile(i,s,a,r)}async fetchPixels(i,s,a,r={}){return this.serviceRasterInfo.multidimensionalInfo!=null&&(r=this.normalizeRasterFetchOptions(r)).multidimensionalDefinition==null?{extent:i,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),s=Math.round(s),a=Math.round(a),this.raster.fetchPixels(i,s,a,r))}async identify(i,s={}){var o;await this.load();const{raster:a,serviceRasterInfo:r}=this;if((r==null?void 0:r.multidimensionalInfo)!=null&&!(r.hasMultidimensionalTranspose&&(dt(s.multidimensionalDefinition)||s.transposedVariableName||s.timeExtent))&&(s=this.normalizeRasterFetchOptions(s)).multidimensionalDefinition==null)return{location:i,value:null};const l=(o=this.multidimensionalSubset)==null?void 0:o.areaOfInterest;if(l&&!l.contains(i))throw new P("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return a.identify(i,s)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var r,l,o;const i=(r=this.serviceRasterInfo)==null?void 0:r.multidimensionalInfo;if(i==null||((l=this.serviceRasterInfo)==null?void 0:l.dataType)!=="standard-time")return!1;const s=this.multidimensionalDefinition,a=(o=s==null?void 0:s[0])==null?void 0:o.variableName;return i.variables.some(c=>c.name===a&&(!(s!=null&&s[0].dimensionName)||c.dimensions.some(u=>u.name==="StdTime")))}getStandardTimeValue(i){return new Date(24*(i-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(i){var a;const s=i??((a=this.serviceRasterInfo)==null?void 0:a.multidimensionalInfo);return ci(this.multidimensionalSubset,s)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=Ke(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&this.raster.datasetFormat==="Function"&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const i=new mi;return this._rasterJobHandler.connectionPromise=i.initialize().then(async()=>{n(this),this._rasterJobHandler.instance=i,this.raster.rasterJobHandler=i,this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch(()=>{}),this.renderer&&this.updateRenderer()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){var i;if(this.interpolation==null){n(this);const{raster:s}=this,a=ui(s.rasterInfo,s.tileType,(i=this.sourceJSON)==null?void 0:i.defaultResamplingMethod);this._set("interpolation",a)}}_configDefaultRenderer(i="no"){var h,f;n(this);const{rasterInfo:s}=this.raster;!this.bandIds&&s.bandCount>1&&(this.bandIds=hi(s));const a=Qe(s,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),r=a==null?void 0:a.name,l=fi(this.raster);if(!this.renderer||i==="override"){const m=tt(s,{bandIds:this.bandIds,variableName:r,rasterFunctionColorRamp:l}),g=s.statistics,p=g&&g.length>0?g[0]:null,d=(p==null?void 0:p.max)??0,y=(p==null?void 0:p.min)??0;this.raster.datasetFormat==="WCSServer"&&m.type==="raster-stretch"&&(d>1e24||y<-1e24)&&(m.dynamicRangeAdjustment=!0,m.statistics=null,m.stretchType==="none"&&(m.stretchType="min-max")),this.renderer=m}const o=Ze({...this.renderer.toJSON(),variableName:r}),c=et(s,r);this.symbolizer?(this.symbolizer.rendererJSON=o,this.symbolizer.rasterInfo=c):this.symbolizer=new Ti({rendererJSON:o,rasterInfo:c});const u=this.symbolizer.bind();if(u.success){if(i==="auto"){const{colormap:m}=this.raster.rasterInfo,g=this.renderer;if(m!=null&&g.type==="raster-colormap"){const p=tt(this.raster.rasterInfo);JSON.stringify(p)!==JSON.stringify(g)&&this._configDefaultRenderer("override")}else if(g.type==="raster-stretch"){const p=(h=this.bandIds)==null?void 0:h.length,d=(f=g.statistics)==null?void 0:f.length;!g.dynamicRangeAdjustment&&d&&p&&d!==p&&this._configDefaultRenderer("override")}}}else ae.getLogger(this).warn("imagery-tile-mixin",u.error||"The given renderer is not supported by the layer."),i==="auto"&&this._configDefaultRenderer("override")}};function n(i){if(!i.raster||!i.serviceRasterInfo)throw new P("imagery-tile","no raster")}return b([S({clonable:!1})],e.prototype,"_cachedRendererJson",void 0),b([S({clonable:!1})],e.prototype,"_cachedRasterFunctionJson",void 0),b([S({clonable:!1})],e.prototype,"_compatibleFullExtent",void 0),b([S({clonable:!1})],e.prototype,"_isConstructedFromFunctionRaster",void 0),b([S({clonable:!1})],e.prototype,"_rasterJobHandler",void 0),b([S()],e.prototype,"bandIds",void 0),b([S({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),b([S({json:{read:!1}})],e.prototype,"fullExtent",null),b([S()],e.prototype,"interpolation",void 0),b([S()],e.prototype,"ioConfig",void 0),b([S({type:[We],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),b([S({type:si,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),b([S()],e.prototype,"raster",void 0),b([S({type:Be,json:{name:"renderingRule",write:!0}})],e.prototype,"rasterFunction",null),b([S({readOnly:!0})],e.prototype,"rasterInfo",null),b([S()],e.prototype,"serviceRasterInfo",void 0),b([S()],e.prototype,"sourceJSON",void 0),b([S({readOnly:!0,type:z,json:{read:!1}})],e.prototype,"spatialReference",void 0),b([S({type:te})],e.prototype,"tileInfo",void 0),b([S(ft)],e.prototype,"url",null),b([S({types:ni,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var s;const i=((s=this.renderer)==null?void 0:s.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!i}}},origins:{"web-scene":{types:ri,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:i=>({enabled:i&&i.type!=="vector-field"&&i.type!=="flow"})}}}}})],e.prototype,"renderer",null),b([_t("renderer")],e.prototype,"readRenderer",null),b([S({clonable:!1})],e.prototype,"symbolizer",void 0),e=b([Q("esri.layers.mixins.ImageryTileMixin")],e),e};function wt(t){return["x","e","east","long","longitude"].includes(t.toLowerCase())}function It(t){return["y","n","west","lat","latitude"].includes(t.toLowerCase())}function cs(t){const{axes:e}=t.domain,n=Object.keys(e),i=[],s=[];let a=-1,r=-1,l=[];for(let x=0;x<n.length;x++){const w=n[x];wt(w)?a=x:It(w)&&(r=x);const I=e[w],T=[];if("values"in I){I.values.forEach(_=>T.push(typeof _=="string"?new Date(_).getTime():_));const R=T[1]-T[0];i.push([T[0]-.5*R,T[T.length-1]+.5*R]),s.push(R)}else{const{start:R,stop:_,num:M}=I,v=(_-R)/(M-1);i.push([R-.5*v,_+.5*v]),s.push(v);for(let F=0;F<M;F++)T.push(R+v*F)}l.push({name:w,values:T,extent:[T[0],T[T.length-1]]})}a>-1&&r===-1?r=a===0?1:0:r>-1&&a===-1?a=r===0?1:0:r===-1&&a===-1&&(a=0,r=1),l=l.filter((x,w)=>!(w===a||w===r));const{referencing:o}=t.domain,c=o.find(x=>x.coordinates.includes(n[a])).system.id,u=c==null?void 0:c.slice(c.lastIndexOf("/")+1),h=u==null||u==="CRS84"?4326:Number(u),f=new z({wkid:h}),[m,g]=i[a],[p,d]=i[r],y=new L({xmin:m,xmax:g,ymin:p,ymax:d,spatialReference:f});return{width:Math.round(y.width/s[a]),height:Math.round(y.height/s[r]),extent:y,dimensions:l}}function Me(t){const e=Ct();return e?t[e]??Object.values(t)[0]:Object.values(t)[0]}function Ce(){return Math.round(255*Math.random())}function us(t){var i,s;const e={},{parameters:n}=t;if(!n)return e;for(const[a,r]of Object.entries(n)){const{type:l,description:o,unit:c,categoryEncoding:u,observedProperty:h}=r;if(l==="Parameter"&&(e[a]={},o&&(e[a].description=Me(o)),c&&(e[a].unit=c.label?Me(c.label):null,e[a].symbol=(i=c.symbol)==null?void 0:i.value),u)){const f=Object.entries(u).map((p,d)=>({OID:d,Value:Number(p[1]),ClassName:p[0].slice(p[0].lastIndexOf("/")+1),Count:1}));let m=!1;(s=h==null?void 0:h.categories)!=null&&s.length&&(h.categories.forEach(p=>{if(!p.id)return;const d=p.id.slice(p.id.lastIndexOf("/")+1),y=f.find(w=>w.ClassName===d);if(!y)return;const x=p.label?Me(p.label):null;if(y.Label=x,p.preferredColor){const w=Mt.fromHex(p.preferredColor);w&&(m=!0,y.Red=w.r,y.Green=w.g,y.Blue=w.b)}}),m&&f.forEach(p=>{p.Red==null&&(p.Red=Ce(),p.Green=Ce(),p.Blue=Ce())}));const g={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:f.map(p=>({attributes:p}))};m&&g.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),e[a].attributeTable=g}}return e}function hs(t){let e=Number.MAX_VALUE,n=-Number.MAX_VALUE;for(let i=0;i<t.length;i++){const s=t[i];s!=null&&(s<e&&(e=s),s>n&&(n=s))}return _i(e,n)}function fs(t,e,n){const i=t.map((o,c)=>({name:o,count:e[c]})).sort((o,c)=>o.name>c.name?-1:1),s=(a=1,o=>a*=o.count);var a;const r=[...i.slice(1),{name:"",count:1}].reverse().map(s).reverse();let l=0;for(let o=t.length-1;o>=0;o--)l+=r[i.findIndex(({name:c})=>c===t[o])]*(n%e[o]),n=Math.floor(n/e[o]);return l}function ms(t){var f;const{width:e,height:n,extent:i,dimensions:s}=cs(t),{ranges:a}=t,r=Object.keys(a).sort((m,g)=>m<g?-1:1),l=[];for(let m=0;m<r.length;m++){const g=r[m];s!=null&&s.length&&l.push({name:g,dimensions:s})}const o=us(t);l.forEach(m=>o[m.name]&&Object.assign(m,o[m.name]));const c=l.length?{variables:l}:void 0,u=[];for(let m=0;m<r.length;m++){const g=r[m],{values:p,dataType:d,axisNames:y,shape:x}=a[g],w=x.length>2?m*x.slice(0,-2).reduce((v,F)=>v*F):0,I=y.slice(0,-2),T=x.slice(0,-2),R=d==="float"?"f32":hs(p),_=e*n,M=p.length/_;for(let v=0;v<M;v++){const F=V.createEmptyBand(R,_),k=new Uint8Array(_).fill(255);let C=!1;const E=v*_;for(let O=0;O<_;O++){const $=p[E+O];$==null?(k[O]=0,C=!0):F[O]=$}if(m===0||s!=null&&s.length){const O=new V({width:e,height:n,mask:C?k:null,pixels:[F],pixelType:R});O.updateStatistics(),(s==null?void 0:s.length)?u[fs(I,T,v)+w]=O:u.push(O)}else{const O=u[v];O.pixels.push(F),C?O.mask&&(O.mask=V.combineBandMasks([O.mask,k])):O.mask=C?k:null}}}const h=(f=Object.values(o).find(m=>m.attributeTable))==null?void 0:f.attributeTable;return{extent:i,pixelBlocks:u,multidimensionalInfo:c,attributeTable:h,bandNames:c?void 0:r}}let ce=class extends oe{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}async open(t){await this.init();const e=this.source,{pixelBlocks:n,attributeTable:i,statistics:s,histograms:a,name:r,nativeExtent:l,transform:o}=e,c=n[0],{width:u,height:h,pixelType:f}=c,m=e.extent??new L({xmin:-.5,ymin:.5,xmax:u-.5,ymax:h-.5,spatialReference:new z({wkid:3857})}),g=e.isPseudoSpatialReference??!e.extent,p={x:m.width/u,y:m.height/h},d={...e.keyProperties};i&&(d.DataType="Thematic");const y=new Se({width:u,height:h,pixelType:f,extent:m,nativeExtent:l,attributeTable:i,transform:o,pixelSize:p,spatialReference:m.spatialReference,bandCount:c.pixels.length,keyProperties:d,multidimensionalInfo:e.multidimensionalInfo,statistics:s,isPseudoSpatialReference:g,histograms:a});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(y),this.createRemoteDatasetStorageInfo(y,512,512),this._set("rasterInfo",y),this.updateTileInfo(),y.multidimensionalInfo?await this._buildMDimStats(e.pixelBlocks,y.multidimensionalInfo):await this._buildInMemoryRaster(c,{width:512,height:512},t),y.multidimensionalInfo||(this.source=null),this.datasetName=r}fetchRawTile(t,e,n,i={}){if(!this._pixelBlockTiles){const{rasterInfo:a}=this,[r,l]=a.storageInfo.tileInfo.size,{sliceId:o}=i,{pixelBlocks:c}=this.source,u={pixelBlock:o==null?c[0]:c[o],useBilinear:a.dataType!=="thematic",tileSize:{width:r,height:l},level:t,row:e,col:n},h=this.rasterJobHandler?this.rasterJobHandler.clipTile(u,i):ki(u);return Promise.resolve(h)}const s=this._pixelBlockTiles.get(`${t}/${e}/${n}`);return Promise.resolve(s)}async _buildInMemoryRaster(t,e,n){var h,f;const{rasterInfo:i}=this,s=i.storageInfo.maximumPyramidLevel??0,a=i.dataType!=="thematic",r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:e,maximumPyramidLevel:s,useBilinear:a},n):Promise.resolve(Fi(t,e,s,a)),l=i.statistics!=null,o=i.histograms!=null,c=this.ioConfig.skipStatistics||l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},n):Promise.resolve(Mi(t)),u=await mt([r,c]);if(!u[0].value&&u[1].value)throw new P("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=u[0].value,l||(i.statistics=(h=u[1].value)==null?void 0:h.statistics),o||(i.histograms=(f=u[1].value)==null?void 0:f.histograms)}async _buildMDimStats(t,e,n){for(let i=0;i<e.variables.length;i++){const s=e.variables[i];if(s.statistics)continue;const a=s.dimensions.map(c=>{var u,h;return new We({variableName:s.name,dimensionName:c.name,values:[((u=c.values)==null?void 0:u[0])??((h=c.extent)==null?void 0:h[0])],isSlice:!0})}),r=pt(a,e),l=r==null?null:t[r];if(l==null)continue;const o=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:l},n):Ge(l);s.statistics=o.statistics,s.histograms||(s.histograms=o.histograms)}}};b([S({type:String,json:{write:!0}})],ce.prototype,"datasetFormat",void 0),b([S()],ce.prototype,"source",void 0),b([S()],ce.prototype,"url",null),ce=b([Q("esri.layers.support.rasterDatasets.InMemoryRaster")],ce);const qe=ce;let me=class extends oe{constructor(){super(...arguments),this.datasetFormat="CovJSON"}async open(e){await this.init();const{extent:n,pixelBlocks:i,multidimensionalInfo:s,attributeTable:a,bandNames:r}=await this._fetchData(e),{statistics:l,histograms:o}=Ge(i[0]),c=r==null?void 0:r.map(m=>({BandName:m})),u={DataType:a?"Thematic":s?"Scientific":"Generic",BandProperties:c},h=new qe({source:{extent:n,pixelBlocks:i,attributeTable:a?He.fromJSON(a):null,multidimensionalInfo:s,statistics:l,histograms:o,keyProperties:u,isPseudoSpatialReference:!1}});await h.open(),this._inMemoryRaster=h;const f=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",f.slice(0,f.indexOf("."))),this._set("rasterInfo",h.rasterInfo)}fetchRawTile(e,n,i,s={}){return this._inMemoryRaster.fetchRawTile(e,n,i,s)}async _fetchData(e){var a,r,l,o;const n=this.source??(await this.request(this.url,{signal:e==null?void 0:e.signal})).data,i="imagery-tile-layer:open-coverage-json";if(((a=n.type)==null?void 0:a.toLowerCase())!=="coverage"||((l=(r=n.domain)==null?void 0:r.domainType)==null?void 0:l.toLowerCase())!=="grid")throw new P(i,"Only coverage with Grid domain type is supported");if(!n.ranges)throw new P(i,"Missing ranges in the grid coverage data");if(!((o=n.domain.referencing)!=null&&o.length))throw new P(i,"Missing domain referencing in the grid coverage data");const s=Object.values(n.ranges);for(let c=0;c<s.length;c++){const{axisNames:u,shape:h,type:f,values:m}=s[c];if(!(f.toLowerCase()==="ndarray"&&(m!=null&&m.length)&&(u!=null&&u.length)&&(h!=null&&h.length)))throw new P(i,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!(wt(u[u.length-1])&&It(u[u.length-2])))throw new P(i,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return ms(n)}};b([S({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),b([S({constructOnly:!0})],me.prototype,"source",void 0),me=b([Q("esri.layers.support.rasterDatasets.CovJSONRaster")],me);const ds=me;function fe(t,e){if(!t||!e)return[];let n=e;e.includes("/")?(n=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const i=[];if(e){const a=fe(t,n);for(let r=0;r<a.length;r++)fe(a[r],e).forEach(l=>i.push(l));return i}const s=t.getElementsByTagNameNS("*",n);if(!s||s.length===0)return[];for(let a=0;a<s.length;a++)i.push(s[a]||s.item(a));return i}function q(t,e){if(!t||!e)return null;let n=e;e.includes("/")?(n=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const i=fe(t,n);return i.length>0?e?q(i[0],e):i[0]:null}function K(t,e=null){const n=e?q(t,e):t;let i;return n?(i=n.textContent||n.nodeValue,i?i.trim():null):null}function ps(t,e){const n=fe(t,e),i=[];let s;for(let a=0;a<n.length;a++)s=n[a].textContent||n[a].nodeValue,s&&(s=s.trim(),s!==""&&i.push(s));return i}function we(t,e){return ps(t,e).map(n=>Number(n))}function re(t,e){const n=K(t,e);return Number(n)}function Oe(t,e){var s;const n=(s=t==null?void 0:t.nodeName)==null?void 0:s.toLowerCase(),i=e.toLowerCase();return n.slice(n.lastIndexOf(":")+1)===i}function ct(t,e){if(!t||!e)return null;const n=[];for(let i=0;i<t.length;i++)n.push(t[i]),n.push(e[i]);return n}function ys(t){const e=q(t,"GeodataXform"),n=_e(re(e,"SpatialReference/WKID")||K(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:n,transform:null};const i=re(e,"PolynomialOrder")??1,s=we(e,"CoeffX/Double"),a=we(e,"CoeffY/Double"),r=we(e,"InverseCoeffX/Double"),l=we(e,"InverseCoeffY/Double"),o=ct(s,a),c=ct(r,l);return{spatialReference:n,transform:o&&c&&o.length&&c.length?new Ue({spatialReference:n,polynomialOrder:i,forwardCoefficients:o,inverseCoefficients:c}):null}}function gs(t){var f;const e=re(t,"NoDataValue"),n=q(t,"Histograms/HistItem"),i=re(n,"HistMin"),s=re(n,"HistMax"),a=re(n,"BucketCount"),r=(f=K(n,"HistCounts"))==null?void 0:f.split("|").map(m=>Number(m));let l,o,c,u;fe(t,"Metadata/MDI").forEach(m=>{const g=Number(m.textContent??m.nodeValue);switch(m.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=g;break;case"STATISTICS_MAXIMUM":o=g;break;case"STATISTICS_MEAN":c=g;break;case"STATISTICS_STDDEV":u=g}});const h=re(t,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:r!=null&&r.length&&i!=null&&s!=null?{min:i,max:s,size:a||r.length,counts:r}:null,sourceBandIndex:h,statistics:l!=null&&o!=null?{min:l,max:o,avg:c,stddev:u}:null}}function _e(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&e!==0)return new z({wkid:e});if(t=String(t).trim(),Ot(t))return new z({wkt2:t});const n=t.toUpperCase();if(n.startsWith("COMPD_CS")){if(!n.includes("VERTCS")||!n.includes("GEOGCS")&&!n.startsWith("PROJCS"))return null;const i=n.indexOf("VERTCS"),s=n.indexOf("PROJCS"),a=s>-1?s:n.indexOf("GEOGCS");if(a===-1)return null;const r=t.slice(a,t.lastIndexOf("]",i)+1).trim(),l=t.slice(i,t.lastIndexOf("]")).trim();e=Pe(r);const o=new z(e?{wkid:e}:{wkt:r}),c=Pe(l);return c&&(o.vcsWkid=c),o}return n.startsWith("GEOGCS")||n.startsWith("PROJCS")?(e=Pe(t),new z(e!==0?{wkid:e}:{wkt:t})):null}function Pe(t){var s;const e=t.replaceAll("]","[").replaceAll('"',"").split("[").map(a=>a.trim()).filter(a=>a!==""),n=e[e.length-1].split(","),i=(s=n[0])==null?void 0:s.toLowerCase();if((i==="epsg"||i==="esri")&&t.endsWith('"]]')){const a=Number(n[1]);if(!isNaN(a)&&a!==0)return a}return 0}function Ve(t){var i;if(((i=t==null?void 0:t.documentElement.tagName)==null?void 0:i.toLowerCase())!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach(s=>{if(s.nodeType===1){if(Oe(s,"SRS")){if(!e.spatialReference){const a=K(s);e.spatialReference=_e(a)}}else if(Oe(s,"Metadata"))if(s.getAttribute("domain")==="xml:ESRI"){const{spatialReference:a,transform:r}=ys(s);e.transform=r,e.spatialReference||(e.spatialReference=a)}else fe(s,"MDI").forEach(a=>e.metadata[a.getAttribute("key")]=K(a));else if(Oe(s,"PAMRasterBand")){const a=gs(s);a.sourceBandIndex!=null&&e.rasterBands[a.sourceBandIndex]==null?e.rasterBands[a.sourceBandIndex]=a:e.rasterBands.push(a)}}});const n=e.rasterBands;if(n.length){const s=!!n[0].statistics;e.statistics=s?n.map(r=>r.statistics).filter(De):null;const a=!!n[0].histogram;e.histograms=a?n.map(r=>r.histogram).filter(De):null}return e}let Re=class extends oe{async open(t){await this.init();const e=await this._fetchData(t);let{spatialReference:n,statistics:i,histograms:s,transform:a}=await this._fetchAuxiliaryData(t);const r=!n;r&&(n=new z({wkid:3857})),s!=null&&s.length&&i==null&&(i=je(s));const{width:l,height:o}=e;let c=new L({xmin:-.5,ymin:.5-o,xmax:l-.5,ymax:.5,spatialReference:n});const u=a?a.forwardTransform(c):c;let h=!0;if(a){const m=a.forwardCoefficients;h=m&&m[1]===0&&m[2]===0,h&&(a=null,c=u)}const f=new qe({source:{extent:u,nativeExtent:c,transform:a,pixelBlocks:[e],statistics:i,histograms:s,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:r},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(f.ioConfig.skipMapInfo=!0),await f.open(),f.source=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(t,e,n,i={}){return this._inMemoryRaster.fetchRawTile(t,e,n,i)}async _fetchData(t){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:t==null?void 0:t.signal}),n=Ci(e).toUpperCase();if(n!=="JPG"&&n!=="PNG"&&n!=="GIF"&&n!=="BMP")throw new P("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",n);const i=n.toLowerCase(),s=i==="gif"||i==="bmp"||!Pt("ios"),a=await this.decodePixelBlock(e,{format:i,useCanvas:s,hasNoZlibMask:!0});if(a==null)throw new P("image-aux-raster:open","the data cannot be decoded");return a}async _fetchAuxiliaryData(t){var u;const e=t==null?void 0:t.signal,{skipExtensions:n=[],skipMapInfo:i}=this.ioConfig,s=i||n.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),a=this.datasetFormat,r=a==="JPG"?"jgw":a==="PNG"?"pgw":a==="BMP"?"bpw":null,l=r&&n.includes(r)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+r,{responseType:"text",signal:e}),o=await mt([s,l]);if(e!=null&&e.aborted)throw $t();const c=Ve((u=o[0].value)==null?void 0:u.data);if(!c.transform){const h=o[1].value?o[1].value.data.split(`
`).slice(0,6).map(f=>Number(f)):null;c.transform=(h==null?void 0:h.length)===6?new Ue({forwardCoefficients:[h[4],h[5],h[0],-h[1],h[2],-h[3]]}):null}return c}};b([S({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),Re=b([Q("esri.layers.support.rasterDatasets.ImageAuxRaster")],Re);const Ie=Re;let de=class extends oe{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(t){var _,M;await this.init();const e=t==null?void 0:t.signal,n=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});n.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const i=n.data;if(this.sourceJSON=i,!i)throw new P("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!i.tileInfo)throw new P("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const s=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=i.cacheType,this.tileType==null&&(s.includes(i.tileInfo.format.toLowerCase())?this.tileType="Map":i.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=((_=i.name)==null?void 0:_.slice(i.name.indexOf("/")+1))??"";const a=await this._fetchRasterInfo({signal:e});if(a==null)throw new P("image-server-raster:open","cannot initialize image service");di(a,i);const r=this.tileType==="Map"?xs(i.tileInfo,i):te.fromJSON(i.tileInfo);Dt(r);const[l,o]=this._computeMinMaxLOD(a,r),{extent:c,pixelSize:u}=a,h=.5/a.width*u.x,f=Math.max(u.x,u.y),{lods:m}=r;(this.tileType!=="Map"&&i.maxScale!==0||Math.abs(u.x-u.y)>h||!m.some(v=>Math.abs(v.resolution-f)<h))&&(u.x=u.y=l.resolution,a.width=Math.ceil((c.xmax-c.xmin)/u.x-.1),a.height=Math.ceil((c.ymax-c.ymin)/u.y-.1));const g=l.level-o.level,[p,d]=r.size,y=[],x=[];m.forEach((v,F)=>{v.level>=o.level&&v.level<=l.level&&y.push({x:v.resolution,y:v.resolution}),F<m.length-1&&x.push(Math.round(10*v.resolution/m[F+1].resolution)/10)}),y.sort((v,F)=>v.x-F.x);const w=this.computeBlockBoundary(c,p,d,r.origin,y,g),I=y.length>1?y.slice(1):null;let T;i.transposeInfo&&(T={tileSize:[i.transposeInfo.rows,i.transposeInfo.cols],packetSize:((M=a.keyProperties)==null?void 0:M._yxs.PacketSize)??0});const R=x.length<=1||x.length>=3&&x.slice(0,-1).every(v=>v===x[0])?x[0]??2:Math.round(10/(o.resolution/l.resolution)**(-1/g))/10;if(a.storageInfo=new ve({blockWidth:r.size[0],blockHeight:r.size[1],pyramidBlockWidth:r.size[0],pyramidBlockHeight:r.size[1],pyramidResolutions:I,pyramidScalingFactor:R,compression:r.format,origin:r.origin,firstPyramidLevel:1,maximumPyramidLevel:g,tileInfo:r,transposeInfo:T,blockBoundary:w}),ws(a),this._set("rasterInfo",a),i.capabilities.toLowerCase().includes("tilemap")){const v={tileInfo:a.storageInfo.tileInfo,parsedUrl:Bt(this.url),url:this.url,tileServers:[]};this._tilemapCache=new qi({layer:v})}}async fetchRawTile(t,e,n,i={}){const{storageInfo:s,extent:a}=this.rasterInfo,{transposeInfo:r}=s,l=r!=null&&!!i.transposedVariableName;if(this._slices&&!l&&i.sliceId==null)return null;const o=l?0:s.maximumPyramidLevel-t+this._levelOffset,c=`${this.url}/tile/${o}/${e}/${n}`,u=this._slices?l?{variable:i.transposedVariableName}:{sliceId:i.sliceId||0}:null,{data:h}=await this.request(c,{query:u,responseType:"array-buffer",signal:i.signal});if(!h)return null;const f=l?r.tileSize:s.tileInfo.size,m=await this.decodePixelBlock(h,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:l,noDataValue:this.rasterInfo.noDataValue});if(m==null)return null;const g=s.blockBoundary[t];if(s.compression!=="jpg"||n>g.minCol&&n<g.maxCol&&e>g.minRow&&e<g.maxRow)return m;const{origin:p,blockWidth:d,blockHeight:y}=s,{x,y:w}=this.getPyramidPixelSize(t),I=Math.round((a.xmin-p.x)/x)%d,T=Math.round((a.xmax-p.x)/x)%d||d,R=Math.round((p.y-a.ymax)/w)%y,_=Math.round((p.y-a.ymin)/w)%y||y,M=n===g.minCol?I:0,v=e===g.minRow?R:0,F=n===g.maxCol?T:d,k=e===g.maxRow?_:y;return Oi(m,{x:M,y:v},{width:F-M,height:k-v}),m}getSliceIndex(t){if(!this._slices||t==null||t.length===0)return null;const e=t;for(let n=0;n<this._slices.length;n++){const i=this._slices[n].multidimensionalDefinition;if(i.length===e.length&&!i.some(s=>{const a=e.find(r=>s.variableName===r.variableName&&r.dimensionName===s.dimensionName);return a?(Array.isArray(s.values[0])?`${s.values[0][0]}-${s.values[0][1]}`:s.values[0])!==(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0]):!0}))return n}return null}async fetchVariableStatisticsHistograms(t,e){var a,r,l;const n=this.request(this.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then(o=>{var c;return(c=o.data)==null?void 0:c.statistics}),i=this.request(this.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then(o=>{var c;return(c=o.data)==null?void 0:c.histograms}),s=await Promise.all([n,i]);return s[0]&&s[0].forEach(o=>{o.avg=o.mean,o.stddev=o.standardDeviation}),(l=(r=(a=s[1])==null?void 0:a[0])==null?void 0:r.counts)!=null&&l.length||(s[1]=null),{statistics:s[0]||null,histograms:s[1]||null}}async computeBestPyramidLevelForLocation(t,e={}){if(!this._tilemapCache)return 0;let n=this.identifyPixelLocation(t,0,e.datumTransformation);if(n===null)return null;let i=0;const{maximumPyramidLevel:s}=this.rasterInfo.storageInfo;let a=s-i+this._levelOffset;const r=n.srcLocation;for(;a>=0;){try{if(await this._tilemapCache.fetchAvailability(a,n.row,n.col,e)==="available")break}catch{}if(a--,i++,n=this.identifyPixelLocation(r,i,e.datumTransformation),n===null)return null}return a===-1||n==null?null:i}async _fetchRasterInfo(t){const e=this.sourceJSON;if(this.tileType==="Map"){const r=e.fullExtent||e.extent,l=Math.ceil((r.xmax-r.xmin)/e.pixelSizeX-.1),o=Math.ceil((r.ymax-r.ymin)/e.pixelSizeY-.1),c=z.fromJSON(e.spatialReference||r.spatialReference),u=new A({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:c});return new Se({width:l,height:o,bandCount:3,extent:L.fromJSON(r),spatialReference:c,pixelSize:u,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:n}=t,i=pi(this.url,this.sourceJSON,{signal:n,query:this.ioConfig.customFetchParameters}),s=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:n}).then(r=>{var l;return(l=r.data)==null?void 0:l.slices}).catch(()=>null):null,a=await Promise.all([i,s]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:t}=this;t.minScale&&t.minScale<0&&(t.minScale=0),t.maxScale&&t.maxScale<0&&(t.maxScale=0)}_computeMinMaxLOD(t,e){const{pixelSize:n}=t,i=.5/t.width*n.x,{lods:s}=e,a=e.lodAt(Math.max.apply(null,s.map(f=>f.level))),r=e.lodAt(Math.min.apply(null,s.map(f=>f.level))),{tileType:l}=this;if(l==="Map")return this._levelOffset=s[0].level,[a,r];if(l==="Raster")return[s.find(f=>f.resolution===n.x)??a,r];const{minScale:o,maxScale:c}=this.sourceJSON;let u=a;c>0&&(u=s.find(f=>Math.abs(f.scale-c)<i),u||(u=s.filter(f=>f.scale>c).sort((f,m)=>f.scale>m.scale?1:-1)[0]??a));let h=r;return o>0&&(h=s.find(f=>Math.abs(f.scale-o)<i)??r,this._levelOffset=h.level-r.level),[u,h]}};function xs(t,e){if(!t)return null;const{minScale:n,maxScale:i,minLOD:s,maxLOD:a}=e;if(s!=null&&a!=null)return te.fromJSON({...t,lods:t.lods.filter(({level:r})=>r!=null&&r>=s&&r<=a)});if(n!==0&&i!==0){const r=c=>Math.round(1e4*c)/1e4,l=n?r(n):1/0,o=i?r(i):-1/0;return te.fromJSON({...t,lods:t.lods.filter(c=>{const u=r(c.scale);return u<=l&&u>=o})})}return te.fromJSON(t)}function ws(t){const{extent:e,spatialReference:n}=t;e.xmin>-1&&e.xmax>181&&(n!=null&&n.wkid)&&n.isGeographic&&(t.nativeExtent=t.extent,t.transform=new Gi,t.extent=t.transform.forwardTransform(e))}b([S({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),b([S()],de.prototype,"tileType",void 0),de=b([Q("esri.layers.support.rasterDatasets.ImageServerRaster")],de);const Is=de,Y=new Map;Y.set("Int8","s8"),Y.set("UInt8","u8"),Y.set("Int16","s16"),Y.set("UInt16","u16"),Y.set("Int32","s32"),Y.set("UInt32","u32"),Y.set("Float32","f32"),Y.set("Float64","f32"),Y.set("Double64","f32");const ee=new Map;ee.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ee.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ee.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ee.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ue=class extends oe{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(t){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=t?t.signal:null,n=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:i,files:s}=this._parseHeader(n.data),{skipMapInfo:a,skipExtensions:r=[]}=this.ioConfig;if(!r.includes("aux.xml")&&!a){const y=await this._fetchAuxiliaryData(t);y!=null&&(i.statistics=y.statistics??i.statistics,i.histograms=y.histograms,y.histograms&&i.statistics==null&&(i.statistics=je(y.histograms)))}a&&this.updateImageSpaceRasterInfo(i),this._set("rasterInfo",i),this._files=s;const l=await this.request(s.index,{responseType:"array-buffer",signal:e});this._storageIndex=bs(l.data);const{blockWidth:o,blockHeight:c}=this.rasterInfo.storageInfo,u=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:h,height:f}=this.rasterInfo,m=[],g=this._getBandSegmentCount();let p=0,d=-1;for(;p<this._storageIndex.length;){d++;const y=Math.ceil(h/o/u**d)-1,x=Math.ceil(f/c/u**d)-1;p+=(y+1)*(x+1)*g*4,m.push({maxRow:x,maxCol:y,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=m,d>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=d),this.updateTileInfo()}async fetchRawTile(t,e,n,i={}){const{blockWidth:s,blockHeight:a,blockBoundary:r}=this.rasterInfo.storageInfo,l=r[t];if(!l||l.maxRow<e||l.maxCol<n||l.minRow>e||l.minCol>n)return null;const{bandCount:o,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:f}=this._getTileLocation(t,e,n);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const k=new Uint8Array(s*a);return new V({width:s,height:a,pixels:void 0,mask:k,validPixelCount:0})}const{bandIds:m}=this.ioConfig,g=this._getBandSegmentCount(),p=[];let d=0;for(d=0;d<g;d++)m&&!m.includes(d)||p.push(this.request(this._files.data,{range:{from:u[d].from,to:u[d].to},responseType:"array-buffer",signal:i.signal}));const y=await Promise.all(p),x=y.map(k=>k.data.byteLength).reduce((k,C)=>k+C),w=new Uint8Array(x),I=[];let T=0;for(d=0;d<g;d++)I.push(T),w.set(new Uint8Array(y[d].data),T),T+=y[d].data.byteLength;const R=ee.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(w.buffer,{width:s,height:a,format:R,planes:(m==null?void 0:m.length)||o,offsets:I,pixelType:c});if(_==null)return null;let{noDataValue:M}=this.rasterInfo;if(M!=null&&R!=="lerc"&&!_.mask&&(M=M[0],M!=null)){const k=_.width*_.height,C=new Uint8Array(k);if(Math.abs(M)>1e24)for(d=0;d<k;d++)Math.abs((_.pixels[0][d]-M)/M)>1e-6&&(C[d]=1);else for(d=0;d<k;d++)_.pixels[0][d]!==M&&(C[d]=1);_.mask=C}let v=0,F=0;if(h!==s||f!==a){let k=_.mask;if(k)for(d=0;d<a;d++)if(F=d*s,d<f)for(v=h;v<s;v++)k[F+v]=0;else for(v=0;v<s;v++)k[F+v]=0;else for(k=new Uint8Array(s*a),_.mask=k,d=0;d<f;d++)for(F=d*s,v=0;v<h;v++)k[F+v]=1}return _}_getBandSegmentCount(){return ee.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,n){const{blockWidth:i,blockHeight:s,pyramidScalingFactor:a}=this.rasterInfo.storageInfo,{width:r,height:l}=this.rasterInfo,o=this._getBandSegmentCount();let c,u,h,f=0,m=0;for(h=0;h<t;h++)m=a**h,c=Math.ceil(r/i/m),u=Math.ceil(l/s/m),f+=c*u;m=a**t,c=Math.ceil(r/i/m),u=Math.ceil(l/s/m),f+=e*c+n,f*=4*o;const g=this._storageIndex.subarray(f,f+4*o);let p=0,d=0;const y=[];for(let x=0;x<o;x++)p=g[4*x]*2**32+g[4*x+1],d=p+g[4*x+2]*2**32+g[4*x+3],y.push({from:p,to:d});return{ranges:y,actualTileWidth:n<c-1?i:Math.ceil(r/m)-i*(c-1),actualTileHeight:e<u-1?s:Math.ceil(l/m)-s*(u-1)}}_parseHeader(t){const e=q(t,"MRF_META/Raster");if(!e)throw new P("mrf:open","not a valid MRF format");const n=q(e,"Size"),i=parseInt(n.getAttribute("x"),10),s=parseInt(n.getAttribute("y"),10),a=parseInt(n.getAttribute("c"),10),r=(K(e,"Compression")||"none").toLowerCase();if(!ee.has(r))throw new P("mrf:open","currently does not support compression "+r);const l=K(e,"DataType")||"UInt8",o=Y.get(l);if(o==null)throw new P("mrf:open","currently does not support pixel type "+l);const c=q(e,"PageSize"),u=parseInt(c.getAttribute("x"),10),h=parseInt(c.getAttribute("y"),10),f=q(e,"DataValues");let m,g;if(f&&(g=f.getAttribute("NoData"),g!=null&&(m=g.trim().split(" ").map(k=>parseFloat(k)))),q(t,"MRF_META/CachedSource"))throw new P("mrf:open","currently does not support MRF referencing other data files");const p=q(t,"MRF_META/GeoTags"),d=q(p,"BoundingBox");let y,x=!1;if(d!=null){const k=parseFloat(d.getAttribute("minx")),C=parseFloat(d.getAttribute("miny")),E=parseFloat(d.getAttribute("maxx")),O=parseFloat(d.getAttribute("maxy")),$=K(p,"Projection")||"";let D=z.WGS84;if($!=="LOCAL_CS[]")if($.toLowerCase().startsWith("epsg:")){const B=Number($.slice(5));isNaN(B)||B===0||(D=new z({wkid:B}))}else D=_e($)??z.WGS84;else x=!0,D=new z({wkid:3857});y=new L(k,C,E,O),y.spatialReference=D}else x=!0,y=new L({xmin:-.5,ymin:.5-s,xmax:i-.5,ymax:.5,spatialReference:new z({wkid:3857})});const w=q(t,"MRF_META/Rsets"),I=parseInt((w==null?void 0:w.getAttribute("scale"))||"2",10),T=y.spatialReference,R=new ve({origin:new A({x:y.xmin,y:y.ymax,spatialReference:T}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:r,pyramidScalingFactor:I}),_=new A({x:y.width/i,y:y.height/s,spatialReference:T}),M=new Se({width:i,height:s,extent:y,isPseudoSpatialReference:x,spatialReference:T,bandCount:a,pixelType:o,pixelSize:_,noDataValue:m,storageInfo:R}),v=K(t,"datafile"),F=K(t,"IndexFile");return{rasterInfo:M,files:{mrf:this.url,index:F||this.url.replace(".mrf",".idx"),data:v||this.url.replace(".mrf",ee.get(r).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return Ve(e)}catch{return null}}};function bs(t){if(t.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,n,i,s,a,r;if(Pi){for(n=new Uint8Array(t),s=new ArrayBuffer(t.byteLength),i=new Uint8Array(s),a=0;a<t.byteLength/4;a++)for(r=0;r<4;r++)i[4*a+r]=n[4*a+3-r];e=new Uint32Array(s)}else e=new Uint32Array(t);return e}b([S()],ue.prototype,"_files",void 0),b([S()],ue.prototype,"_storageIndex",void 0),b([S({type:String,json:{write:!0}})],ue.prototype,"datasetFormat",void 0),ue=b([Q("esri.layers.support.rasterDatasets.MRFRaster")],ue);const Rs=ue;function vs(t){const e=t.fields,n=t.records,i=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",s=[{name:i,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),a=s.map(c=>c.name),r=[];let l=0,o=0;return n.forEach(c=>{const u={};for(u[i]=l++,o=1;o<a.length;o++)u[a[o]]=c[o-1];r.push({attributes:u})}),{displayFieldName:"",fields:s,features:r}}class Ss{static get supportedVersions(){return[5]}static parse(e){const n=new DataView(e),i=3&n.getUint8(0);if(i!==3)return{header:{version:i},recordSet:null};const s=n.getUint32(4,!0),a=n.getUint16(8,!0),r=n.getUint16(10,!0),l={version:i,recordCount:s,headerByteCount:a,recordByteCount:r};let o=32;const c=[],u=[];let h;if(i===3){for(;n.getUint8(o)!==13;)h=String.fromCharCode(n.getUint8(o+11)).trim(),c.push({name:it(new Uint8Array(e,o,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:n.getUint8(o+16)}),o+=32;if(o+=1,c.length>0)for(;u.length<s&&e.byteLength-o>r;){const f=[];n.getUint8(o)===32?(o+=1,c.forEach(m=>{if(m.type==="C")f.push(it(new Uint8Array(e,o,m.length)).trim());else if(m.type==="N")f.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim(),10));else if(m.type==="F")f.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim()));else if(m.type==="D"){const g=String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim();f.push(new Date(parseInt(g.substring(0,4),10),parseInt(g.substring(4,6),10)-1,parseInt(g.substring(6,8),10)))}o+=m.length}),u.push(f)):o+=r}}return{header:l,fields:c,records:u,recordSet:vs({fields:c,records:u})}}}const Ae=(t,e)=>{var n;return(n=t.get(e))==null?void 0:n.values},pe=(t,e)=>{var n,i;return(i=(n=t.get(e))==null?void 0:n.values)==null?void 0:i[0]};let ne=class extends oe{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(t){var p,d,y,x;await this.init();const e=t?t.signal:null,{data:n}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!n)throw new P("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:i,firstIFDPos:s,isBigTiff:a}=$i(n),r=[];await this._readIFDs(r,n,i,s,0,a?8:4,e);const{imageInfo:l,rasterInfo:o}=Ts(r),c=Di(r),u=Bi(r);if(this._headerInfo={littleEndian:i,isBigTiff:a,ifds:r,pyramidIFDs:c,maskIFDs:u,...l},this._set("rasterInfo",o),!l.isSupported)throw new P("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new P("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");o.isPseudoSpatialReference&&ae.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const h=(d=(p=r[0].get("PREDICTOR"))==null?void 0:p.values)==null?void 0:d[0];if(((x=(y=r[0].get("SAMPLEFORMAT"))==null?void 0:y.values)==null?void 0:x[0])===3&&h===2)throw new P("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:m,skipExtensions:g=[]}=this.ioConfig;if(!g.includes("aux.xml")&&!m){const w=await this._fetchAuxiliaryMetaData(t);w!=null&&_s(w,o)}g.includes("vat.dbf")||o.bandCount!==1||o.pixelType!=="u8"||m||(o.attributeTable=await this._fetchAuxiliaryTable(t),o.attributeTable!=null&&(o.keyProperties.DataType="thematic")),m&&this.updateImageSpaceRasterInfo(o),this.updateTileInfo()}async fetchRawTile(t,e,n,i={}){var a;if(!((a=this._headerInfo)!=null&&a.isSupported)||this.isBlockOutside(t,e,n))return null;const s=await this._fetchRawTiffTile(t,e,n,!1,i);if(s!=null&&this._headerInfo.hasMaskBand){const r=await this._fetchRawTiffTile(t,e,n,!0,i);r!=null&&r.pixels[0]instanceof Uint8Array&&(s.mask=r.pixels[0])}return s}async _readIFDs(t,e,n,i,s,a=4,r){if(!i)return null;(i>=e.byteLength||i<0)&&(e=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:"array-buffer",signal:r})).data,s=i+s,i=0);const l=await this._readIFD(e,n,i,s,ge.tiffTags,a,r);if(t.push(l.ifd),!l.nextIFD)return null;await this._readIFDs(t,e,n,l.nextIFD-s,s,a,r)}async _readIFD(t,e,n,i,s=ge.tiffTags,a=4,r){var o,c;if(!t)return null;const l=Ni(t,e,n,i,s,a);if(l.success){const u=[];if((o=l.ifd)==null||o.forEach(h=>{h.values||u.push(h)}),u.length>0){const h=u.map(m=>m.offlineOffsetSize).filter(De),f=Math.min.apply(null,h.map(m=>m[0]));if(Math.min.apply(null,h.map(m=>m[0]+m[1]))-f<=this._bufferSize){const{data:m}=await this.request(this.url,{range:{from:f,to:f+this._bufferSize},responseType:"array-buffer",signal:r});t=m,i=f,u.forEach(g=>Ei(t,e,g,i))}}if((c=l.ifd)!=null&&c.has("GEOKEYDIRECTORY")){const h=l.ifd.get("GEOKEYDIRECTORY"),f=h==null?void 0:h.values;if(f&&f.length>4){const m=f[0]+"."+f[1]+"."+f[2],g=await this._readIFD(t,e,h.valueOffset+6-i,i,ge.geoKeys,2,r);h.data=g.ifd,h.data&&h.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[m]})}}return l}if(l.requiredBufferSize&&l.requiredBufferSize!==t.byteLength)return(t=(await this.request(this.url,{range:{from:i,to:i+l.requiredBufferSize+4},responseType:"array-buffer",signal:r})).data).byteLength<l.requiredBufferSize?null:this._readIFD(t,e,0,i,ge.tiffTags,4,r)}async _fetchRawTiffTile(t,e,n,i,s={}){const a=this._getTileLocation(t,e,n,i);if(!a)return null;const{ranges:r,actualTileWidth:l,actualTileHeight:o,ifd:c}=a,u=r.map(R=>this.request(this.url,{range:R,responseType:"array-buffer",signal:s.signal})),h=await Promise.all(u),f=h.map(R=>R.data.byteLength).reduce((R,_)=>R+_),m=h.length===1?h[0].data:new ArrayBuffer(f),g=[0],p=[0];if(h.length>1){const R=new Uint8Array(m);for(let _=0,M=0;_<h.length;_++){const v=h[_].data;R.set(new Uint8Array(v),M),g[_]=M,M+=v.byteLength,p[_]=v.byteLength}}const{blockWidth:d,blockHeight:y}=this.getBlockWidthHeight(t),x=await this.decodePixelBlock(m,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:g,sizes:p},width:d,height:y,planes:null,pixelType:null});if(x==null)return null;let w,I,T;if(l!==d||o!==y){let R=x.mask;if(R)for(w=0;w<y;w++)if(T=w*d,w<o)for(I=l;I<d;I++)R[T+I]=0;else for(I=0;I<d;I++)R[T+I]=0;else for(R=new Uint8Array(d*y),x.mask=R,w=0;w<o;w++)for(T=w*d,I=0;I<l;I++)R[T+I]=1}return x}_getTileLocation(t,e,n,i=!1){const{firstPyramidLevel:s,blockBoundary:a}=this.rasterInfo.storageInfo,r=t===0?0:t-(s-1),{_headerInfo:l}=this;if(!l)return null;const o=i?l.maskIFDs[r]:r===0?l==null?void 0:l.ifds[0]:l==null?void 0:l.pyramidIFDs[r-1];if(!o)return null;const c=Ji(o,l),u=Ae(o,"TILEOFFSETS");if(u===void 0)return null;const h=Ae(o,"TILEBYTECOUNTS"),{minRow:f,minCol:m,maxRow:g,maxCol:p}=a[r];if(e>g||n>p||e<f||n<m)return null;const d=pe(o,"IMAGEWIDTH"),y=pe(o,"IMAGELENGTH"),x=pe(o,"TILEWIDTH"),w=pe(o,"TILELENGTH"),I=[];if(c){const{bandCount:T}=this.rasterInfo;for(let R=0;R<T;R++){const _=R*(g+1)*(p+1)+e*(p+1)+n;I[R]={from:u[_],to:u[_]+h[_]-1}}}else{const T=e*(p+1)+n;I.push({from:u[T],to:u[T]+h[T]-1})}for(let T=0;T<I.length;T++)if(I[T].from==null||!I[T].to||I[T].to<0)return null;return{ranges:I,ifd:o,actualTileWidth:n===p&&d%x||x,actualTileHeight:e===g&&y%w||w}}async _fetchAuxiliaryMetaData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return Ve(e)}catch{return null}}async _fetchAuxiliaryTable(t){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:t==null?void 0:t.signal}),n=Ss.parse(e);return n!=null&&n.recordSet?He.fromJSON(n.recordSet):null}catch{return null}}};function Ts(t){var E,O;const e=Ai(t),{width:n,height:i,tileWidth:s,tileHeight:a,planes:r,pixelType:l,compression:o,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:h,pyramidBlockHeight:f,pyramidResolutions:m,tileBoundary:g,affine:p,metadata:d}=e,y=((E=e.extent.spatialReference)==null?void 0:E.wkt)||((O=e.extent.spatialReference)==null?void 0:O.wkid);let x=_e(y),w=!!e.isPseudoGeographic;x==null&&(w=!0,x=new z({wkid:3857}));const I=new L({...e.extent,spatialReference:x}),T=new A(I?{x:I.xmin,y:I.ymax,spatialReference:x}:{x:0,y:0}),R=new ve({blockWidth:s,blockHeight:a,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:o,origin:T,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidResolutions:m,blockBoundary:g}),_=new A({x:(I.xmax-I.xmin)/n,y:(I.ymax-I.ymin)/i,spatialReference:x}),M=d?{BandProperties:d.bandProperties,DataType:d.dataType}:{};let v=null;const F=pe(t[0],"PHOTOMETRICINTERPRETATION"),k=Ae(t[0],"COLORMAP");if(F<=3&&(k==null?void 0:k.length)>3&&k.length%3==0){v=[];const $=k.length/3;for(let D=0;D<$;D++)v.push([D,k[D]>>>8,k[D+$]>>>8,k[D+2*$]>>>8])}const C=new Se({width:n,height:i,bandCount:r,pixelType:l,pixelSize:_,storageInfo:R,spatialReference:x,isPseudoSpatialReference:w,keyProperties:M,extent:I,colormap:v,statistics:d?d.statistics:null});if(p!=null&&p.length&&(C.nativeExtent=new L({xmin:-.5,ymin:.5-i,xmax:n-.5,ymax:.5,spatialReference:x}),C.transform=new Ue({polynomialOrder:1,forwardCoefficients:[p[2]+p[0]/2,p[5]-p[3]/2,p[0],p[3],-p[1],-p[4]]}),C.extent=C.transform.forwardTransform(C.nativeExtent),C.pixelSize=new A({x:(I.xmax-I.xmin)/n,y:(I.ymax-I.ymin)/i,spatialReference:x}),R.origin.x=-.5,R.origin.y=.5),m){const{x:$,y:D}=C.pixelSize;m.forEach(B=>{B.x*=$,B.y*=D})}return{imageInfo:e,rasterInfo:C}}function _s(t,e){if(e.statistics=t.statistics??e.statistics,e.histograms=t.histograms,t.histograms&&e.statistics==null&&(e.statistics=je(t.histograms)),t.transform&&e.transform==null){e.transform=t.transform,e.nativeExtent=e.extent;const n=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new A({x:(n.xmax-n.xmin)/e.width,y:(n.ymax-n.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=n}e.isPseudoSpatialReference&&t.spatialReference&&(e.spatialReference=t.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}b([S()],ne.prototype,"_files",void 0),b([S()],ne.prototype,"_headerInfo",void 0),b([S()],ne.prototype,"_bufferSize",void 0),b([S({type:String,json:{write:!0}})],ne.prototype,"datasetFormat",void 0),ne=b([Q("esri.layers.support.rasterDatasets.TIFFRaster")],ne);const ks=ne,H=new Map;H.set("MRF",{desc:"Meta Raster Format",constructor:Rs}),H.set("TIFF",{desc:"GeoTIFF",constructor:ks}),H.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Is}),H.set("JPG",{desc:"JPG Raster Format",constructor:Ie}),H.set("PNG",{desc:"PNG Raster Format",constructor:Ie}),H.set("GIF",{desc:"GIF Raster Format",constructor:Ie}),H.set("BMP",{desc:"BMP Raster Format",constructor:Ie}),H.set("CovJSON",{desc:"COVJSON Raster Format",constructor:ds}),H.set("MEMORY",{desc:"In Memory Raster Format",constructor:qe});class $e{static get supportedFormats(){const e=new Set;return H.forEach((n,i)=>e.add(i)),e}static async open(e){var h;const{url:n,ioConfig:i,source:s,sourceJSON:a}=e;let r=e.datasetFormat??(i==null?void 0:i.datasetFormat);r==null&&(n.includes(".")?r=n.slice(n.lastIndexOf(".")+1).toUpperCase():((h=s==null?void 0:s.type)==null?void 0:h.toLowerCase())==="coverage"?r="CovJSON":s!=null&&s.extent&&s.pixelblocks&&(r="MEMORY")),r==="OVR"||r==="TIF"?r="TIFF":r==="JPG"||r==="JPEG"||r==="JFIF"?r="JPG":r==="COVJSON"&&(r="CovJSON"),n.toLowerCase().includes("/imageserver")&&!n.toLowerCase().includes("/wcsserver")&&(r="RasterTileServer");const l={url:n,source:s,sourceJSON:a,datasetFormat:r,ioConfig:i??{bandIds:null,sampling:null}};if(Object.keys(l).forEach(f=>{l[f]==null&&delete l[f]}),r){if(!this.supportedFormats.has(r))throw new P("rasterfactory:open","not a supported format "+r);if(r==="CRF")throw new P("rasterfactory:open",`cannot open raster: ${n}`);const f=new(H.get(r)).constructor(l);return await f.open({signal:e.signal}),f}const o=Array.from(H.keys()).filter(f=>f!=="CovJSON"&&f!=="Memory");let c=0;const u=()=>{if(r=o[c++],!r||r==="CRF")return null;const f=new(H.get(r)).constructor(l);return f.open({signal:e.signal}).then(()=>f).catch(()=>u())};return u()}static register(e,n,i){H.has(e.toUpperCase())||H.set(e.toUpperCase(),{desc:n,constructor:i})}}let N=class extends Nt(Et(Jt(At(Lt(ls(zt(Ht(Wt(Gt(jt(ei))))))))))){constructor(...t){super(...t),this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=Ut(async(e,n,i)=>{const{save:s,saveAs:a}=await ze(()=>import("./imageryUtils-CDlwTo2b.js"),__vite__mapDeps([5,6,4,7,8,9,10,11]));switch(e){case ye.SAVE:return s(this,n);case ye.SAVE_AS:return a(this,i,n)}})}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},t).catch(qt).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var l,o;const t=[new he({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new he({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],e=((l=this.raster)==null?void 0:l.rasterInfo)??this.serviceRasterInfo,n=e==null?void 0:e.attributeTable,i=n!=null?n.fields:null,s="Raster.";if(i){const c=i.filter(u=>u.type!=="oid"&&u.name.toLowerCase()!=="value").map(u=>{const h=u.clone();return h.name=s+u.name,h});t.push(...c)}const a=e==null?void 0:e.dataType,r=e==null?void 0:e.multidimensionalInfo;if((a==="vector-magdir"||a==="vector-uv")&&r!=null){const c=(o=r.variables[0].unit)==null?void 0:o.trim(),u="Magnitude"+(c?` (${c})`:"");t.push(new he({name:"Raster.Magnitude",alias:u,domain:null,editable:!1,type:"double"})),t.push(new he({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return t}createPopupTemplate(t){const{rasterFields:e}=this,n=new Set(e.map(({name:i})=>i).filter(i=>i.toLowerCase()!=="raster.servicepixelvalue.raw"));return Vt({fields:e,title:this.title},{...t,visibleFieldNames:n})}async generateRasterInfo(t,e){var n;if(t=Le(Be,t),await this.load(),!t||((n=t.functionName)==null?void 0:n.toLowerCase())==="none")return this.serviceRasterInfo;try{const{rasterInfo:i}=await this._openFunctionRaster(t,e);return i}catch(i){throw i instanceof P?i:new P("imagery-tile-layer","the given raster function is not supported")}}async save(t){return this._debouncedSaveOperations(ye.SAVE,t)}async saveAs(t,e){return this._debouncedSaveOperations(ye.SAVE_AS,e,t)}write(t,e){const n=this._primaryRasters[0]??this.raster;if(this.loaded?n.datasetFormat==="RasterTileServer"&&(n.tileType==="Raster"||n.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(t,e);if(e!=null&&e.messages){const i=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new P("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${i}'`,{layer:this}))}return null}async _openRaster(t){var i;let e=!1;if(this.raster)await this._openFromRaster(this.raster,t),e=this.raster.datasetFormat==="Function";else{const{url:s,rasterFunction:a,source:r}=this;if(!s&&!r)throw new P("imagery-tile-layer:open","missing url or source parameter");r?await this._openFromSource(r,t):a?await this._openFromUrlWithRasterFunction(s,a,t):await this._openFromUrl(s,t)}const n=this.raster.rasterInfo;if(!n)throw new P("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",e?n:this._primaryRasters[0].rasterInfo),this._set("spatialReference",n.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const s=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(s,{origin:"service"})}else this.read({tileInfo:(i=this.serviceRasterInfo)==null?void 0:i.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Xt(()=>this.customParameters,s=>{this.raster&&(this.raster.ioConfig.customFetchParameters=s)}))}async _openFromRaster(t,e){t.rasterInfo||await t.open({signal:e}),this._primaryRasters=t.datasetFormat==="Function"?t.primaryRasters.rasters:[t],this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(t,e,n){const i=[t];e&&ji(e.toJSON(),i);const s=await Promise.all(i.map(r=>$e.open({url:r,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:n}))),a=s.findIndex(r=>r==null);if(a>-1)throw new P("imagery-tile-layer:open",`cannot open raster: ${i[a]}`);return this._primaryRasters=s,this._initializeWithFunctionRaster(e)}async _openFromUrl(t,e){const n=await $e.open({url:t,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(n==null)throw new P("imagery-tile-layer:open",`cannot open raster: ${t}`);this._primaryRasters=[n],this.raster=n}async _openFromSource(t,e){var a;const n="the tiled imagery data source is not supported",i=((a=t.type)==null?void 0:a.toLowerCase())==="coverage"?"CovJSON":t.extent&&t.pixelBlock?"MEMORY":null;if(!i)throw new P("imagery-tile-layer:open",n);i==="MEMORY"&&(t={extent:t.extent,pixelBlocks:[t.pixelBlock]});const s=await $e.open({url:"",source:t,datasetFormat:i,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(s==null)throw new P("imagery-tile-layer:open",n);this._primaryRasters=[s],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=s}async _openFunctionRaster(t,e){var a;const n={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(r=>n[r.url]=r);const i=gt(((a=t.functionDefinition)==null?void 0:a.toJSON())??t.toJSON(),n),s=new xt({rasterFunction:i});return await s.open(e),s}async _initializeWithFunctionRaster(t,e){try{this.raster=await this._openFunctionRaster(t,e)}catch(n){n instanceof P&&ae.getLogger(this).error("imagery-tile-layer:open",n.message),ae.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}};b([S({clonable:!1})],N.prototype,"_primaryRasters",void 0),b([S({type:[Yt],json:{write:{overridePolicy(){var t;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((t=this.bandIds)==null?void 0:t.join(","))!=="0,1,2"}}}}})],N.prototype,"bandIds",void 0),b([S({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Kt(yi)],N.prototype,"interpolation",void 0),b([S(Qt)],N.prototype,"legendEnabled",void 0),b([S({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],N.prototype,"isReference",void 0),b([S({type:["show","hide"]})],N.prototype,"listMode",void 0),b([S({json:{read:!0,write:!0}})],N.prototype,"blendMode",void 0),b([S()],N.prototype,"sourceJSON",void 0),b([S({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],N.prototype,"version",void 0),b([S({readOnly:!0,json:{read:!1}})],N.prototype,"type",void 0),b([S({type:["ArcGISTiledImageServiceLayer"]})],N.prototype,"operationalLayerType",void 0),b([S({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(t,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(t,e,n){e[n]=!t}}}})],N.prototype,"popupEnabled",void 0),b([S({type:Zt,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],N.prototype,"popupTemplate",void 0),b([S({readOnly:!0})],N.prototype,"defaultPopupTemplate",null),b([S({readOnly:!0,type:[he]})],N.prototype,"fields",void 0),b([S({readOnly:!0,type:[he]})],N.prototype,"rasterFields",null),b([S({constructOnly:!0})],N.prototype,"source",void 0),N=b([Q("esri.layers.ImageryTileLayer")],N);const qs=N;export{qs as default};
