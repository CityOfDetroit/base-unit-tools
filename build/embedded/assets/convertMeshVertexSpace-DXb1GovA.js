import{c7 as p,s,$ as i}from"../base-unit-tools.js";import{l as c}from"./MeshVertexAttributes-DKAng3jh.js";import{M as n}from"./vertexSpaceConversion-egHgUJUp.js";import"./mat3-CZzCd91Y.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./spatialReferenceEllipsoidUtils-BM8Tshkv.js";import"./computeTranslationToOriginAndRotation-zzhu4Olb.js";import"./meshVertexSpaceUtils-CaxYDOK1.js";import"./MeshLocalVertexSpace-DtsFYsU1.js";import"./vec3-BK-X2-t3.js";import"./projection-B_y_6jwx.js";import"./DoubleArray-D5lPRNIK.js";import"./BufferView-BPklAa9f.js";import"./vec2-BpDLFd6x.js";import"./vec4-ByfeaWya.js";async function j(t,r,m){await Promise.resolve(),p(m);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new c({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{j as convertMeshVertexSpace};
