import{c7 as p,s,$ as i}from"./index-DD9VVSMx.js";import{l as c}from"./MeshVertexAttributes-CuJvINX7.js";import{M as n}from"./vertexSpaceConversion-JrWw5EkG.js";import"./mat3-D_76PMBI.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./spatialReferenceEllipsoidUtils-CyFlHXsH.js";import"./computeTranslationToOriginAndRotation-BUk5kU4N.js";import"./meshVertexSpaceUtils-D8HzYVWV.js";import"./MeshLocalVertexSpace-C0nydBtb.js";import"./vec3-FSN0CJ1q.js";import"./projection-XSqtYYSl.js";import"./DoubleArray-1q9vqN0y.js";import"./BufferView-5vWwt9M7.js";import"./vec2-BO476Z4d.js";import"./vec4-CNLu9D9S.js";async function j(t,r,m){await Promise.resolve(),p(m);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new c({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{j as convertMeshVertexSpace};
