import{c7 as p,s,$ as i}from"./index-DKOmzAMm.js";import{l as c}from"./MeshVertexAttributes-CfiMg9vN.js";import{M as n}from"./vertexSpaceConversion-DdxiyRap.js";import"./mat3-BNGRf_pC.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./spatialReferenceEllipsoidUtils-BKSgV6gI.js";import"./computeTranslationToOriginAndRotation-BxPeFPaY.js";import"./meshVertexSpaceUtils-CMKdridq.js";import"./MeshLocalVertexSpace-CZ-FLKyC.js";import"./vec3-C6eb5QY9.js";import"./projection-Ch_noS-l.js";import"./DoubleArray-D2IDWC15.js";import"./BufferView-DOhKdt-N.js";import"./vec2-CurFBDJu.js";import"./vec4-n1PBj5SL.js";async function j(t,r,m){await Promise.resolve(),p(m);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new c({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{j as convertMeshVertexSpace};
